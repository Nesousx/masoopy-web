<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>linux - Category - Masoopy</title><link>https://www.masoopy.com/categories/linux/</link><description>linux - Category - Masoopy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 04 Dec 2018 08:18:42 +0100</lastBuildDate><atom:link href="https://www.masoopy.com/categories/linux/" rel="self" type="application/rss+xml"/><item><title>Install GLPI on Ubuntu 18.04 with MariaDB and NGinX</title><link>https://www.masoopy.com/install-glpi-on-ubuntu-18.04-with-mariadb-and-nginx/</link><pubDate>Tue, 04 Dec 2018 08:18:42 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/install-glpi-on-ubuntu-18.04-with-mariadb-and-nginx/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2018/12/Install-GLPI-on-Ubuntu-18-04-with-MariaDB-and-NGinX.png" referrerpolicy="no-referrer">
            </div><p><a href="https://glpi-project.org/" target="_blank" rel="noopener noreffer ">GLPI</a> is an asset management software. It can handle automatic inventory of your assets (workstations, servers, printers, etc.) ticketing, and much more. Let&rsquo;s see how to install it under Ubuntu with MariaDB and NGinX.</p>
<h2 id="prepare-your-system">Prepare your system</h2>
<p>Simply install the requirements :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo apt install nginx php7.0-fpm mariadb-server php7.0-curl php7.0-gd php7.0-mysql php7.0-cli php7.0-imap php7.0-ldap php7.0-apcu php7.0-xmlrpc php7.0-mbstring php7.0-xml php7.0-xmlrpc
</code></pre></td></tr></table>
</div>
</div><p>Create the self signed certificates :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cd /etc/ssl/certs sudo openssl req -x509 -newkey rsa:4096 -keyout private/gpli.domain.com.key -out glpi.domain.com.cert -days 3650 -nodes -subj &#39;/CN=glpi.domain.com&#39;
</code></pre></td></tr></table>
</div>
</div><p>NB :</p>
<ul>
<li>Replace &quot; <strong>glpi.domain.com</strong>&quot; with your desired domain name (3 times!).</li>
<li>The certificate is valid for 10 years ( <strong>3650 days</strong> ).</li>
<li>The certificate will be located in <strong>/etc/ssl/certs</strong> and the key in <strong>/etc/ssl/certs/private</strong>.</li>
</ul>
<p>Create the dhparam file for NGINX :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cd /etc/ssl/certs
sudo openssl dhparam -out dhparam.pem 4096
</code></pre></td></tr></table>
</div>
</div><p>Your system is now &ldquo;well prepared&rdquo;, let&rsquo;s move on to the the setup of the various services.</p>
<h2 id="prepare-mysql--mariadb">Prepare MySQL / MariaDB</h2>
<p>Let&rsquo;s secure our database : MySQL / MariaDB installation :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo mysql_secure_installation
</code></pre></td></tr></table>
</div>
</div><p>Answer &ldquo;yes&rdquo; to all questions, and define a secure root password!</p>
<p>NB : you&rsquo;ll probably run into an error, where mysql / mariadb won&rsquo;t start. If you check journalctl, it will say something about apparmor denying the execution of mariadb. Run the following command and reboot (yes, reboot)!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo aa-disable /usr/sbin/mysqld
</code></pre></td></tr></table>
</div>
</div><p>Now, connect to mysql with &ldquo;root&rdquo; user and create the database + user for your GLPI installation :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo mysql -u root -p
</code></pre></td></tr></table>
</div>
</div><p>NB : make sure to connect to MySQL using &ldquo;root&rdquo;, otherwise, you might run into issues.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">CREATE USER &#39;glpi&#39;@&#39;%&#39; IDENTIFIED BY &#39;My-Aw3s0mE-P@SSW0rD&#39;; CREATE DATABASE glpi; GRANT ALL PRIVILEGES ON glpi.* TO &#39;glpi&#39;@&#39;%&#39;;
</code></pre></td></tr></table>
</div>
</div><h2 id="prepare-nginx">Prepare NGiNX</h2>
<p>NGiNX is the web server, let&rsquo;s prepare it.</p>
<p>Remove the default website :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo unlink /etc/nginx/sites-enabled/default
</code></pre></td></tr></table>
</div>
</div><p>Now, we are going to create the &ldquo;virtual-host&rdquo; for NGiNX, in order to serve the GLPI website :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nano /etc/nginx/sites-available/glpi
</code></pre></td></tr></table>
</div>
</div><p>Then paste the following :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">server { listen 80; 
server_name glpi.domain.com; 
return 301 https://$server_name$request_uri; } 

server { listen 443 ssl; server_name glpi.domain.com; 

ssl_certificate /etc/ssl/glpi.domain.com.cert; 
ssl_certificate_key /etc/ssl/private/glpi.domain.com.key; 
ssl_dhparam /etc/ssl/dhparam.pem; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
ssl_prefer_server_ciphers on; ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS; 

root /var/www/glpi; index index.php; 
location / {try_files $uri $uri/ index.php;} 

location ~ .php$ { fastcgi_pass 127.0.0.1:9000; 
fastcgi_index index.php; 
include /etc/nginx/fastcgi_params; 
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; 
include fastcgi_params; fastcgi_param SERVER_NAME $host; } }
</code></pre></td></tr></table>
</div>
</div><p>Then we create a symlink from the &ldquo;available&rdquo; directory to the &ldquo;enabled&rdquo; directory.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo ln -s /etc/nginx/sites-available/glpi /etc/nginx/sites-enabled/glpi.conf
</code></pre></td></tr></table>
</div>
</div><h2 id="install-the-application">Install the application</h2>
<p>We&rsquo;ll prepare the required folders :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">mkdir -p /etc/glpimkdir -p /var/lib/glpimkdir -p /var/log/glpimkdir -p /var/www/glpi
</code></pre></td></tr></table>
</div>
</div><p>Browse to <a href="https://github.com/glpi-project/glpi/releases" target="_blank" rel="noopener noreffer ">GLPI Github release page</a>, and copy link from latest version, then download it directly on your server in your home directory :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cd wget https://github.com/glpi-project/glpi/releases/download/9.3.3/glpi-9.3.3.tgz
</code></pre></td></tr></table>
</div>
</div><p>NB : use the .tgz file and replace version number with the latest one.</p>
<p>Extract the files :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">tar xzvf glpi-*.tgz
</code></pre></td></tr></table>
</div>
</div><p>This should extract all the files into the glpi folder.</p>
<p>We are now going to the move the files to the appropriate folders so that our installation doesn&rsquo;t contain everything in the web directory (which is not secure).</p>
<p>Go to the glpi folder :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cd ~/glpi
</code></pre></td></tr></table>
</div>
</div><p>Then execute the following commands :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">mv config /etc/glpi/ mv files/ /var/lib/glpimv * /var/www/glpi
</code></pre></td></tr></table>
</div>
</div><p>Now, gives the necessary rights :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">chown -R www-data: /etc/glpichown -R www-data: /var/lib/glpi chown -R www-data: /var/www/glpi
</code></pre></td></tr></table>
</div>
</div><p>Everything should be ready, let&rsquo;s move on the next part!</p>
<h2 id="glpi-follow-the-wizard">GLPI, follow the wizard</h2>
<p>From now, on simply open a web browser and go to the IP address of your server, simply specifying the HTTPS protocol, this should be something like :</p>
<p><a href="https://glpi.domain.com">https://glpi.domain.com</a></p>
<p>NB : make sure to declare glpi.domain.com in some DNS server.</p>
<p>From now, on, simply follow the instruction on your screen&hellip;</p>
<p>Enter the database information :</p>
<ul>
<li>Server : localhost</li>
<li>User : glpi</li>
<li>Password : My-Aw3s0mE-P@SSW0rD</li>
</ul>
<p>Select (or create) the database called &ldquo;GLPI&rdquo; ;</p>
<p>Windows like install, hit the &ldquo;next&rdquo; button until it is completed.</p>
<p>NB : your install might crash at some point with a timeout. Fear not, it is not blocking. Wait about 2 minutes, then keep on following the guide.</p>
<p>When it is done, browse to the main URL, and you should be brought to a brand new login page.</p>
<p>Log in with the default &ldquo;admin&rdquo; account which is &quot; <strong>glpi/glpi</strong>&quot;. Once logged, in remember to change password for all the default accounts (and/or disable some of them), and remove the file install.php from your <strong>/var/www/glpi/install</strong> directory.</p>
<p>You are now all set, enjoy GPLI!</p>
]]></description></item><item><title>Using Unifi controller on Docker</title><link>https://www.masoopy.com/using-unifi-controller-on-docker/</link><pubDate>Sat, 10 Nov 2018 18:04:27 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/using-unifi-controller-on-docker/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/unifi.png" referrerpolicy="no-referrer">
            </div><p>Following a post on <a href="https://www.reddit.com/r/Ubiquiti/comments/9umu34/controller_w_dockercompose_nginx_reverseproxy/" target="_blank" rel="noopener noreffer ">Reddit</a>, I decided to share my config used to run the Unifi controller. Doing so, you won&rsquo;t have to purchase a <a href="https://amzn.to/2T2mLnS" target="_blank" rel="noopener noreffer ">Unifi Cloud Controller</a>.</p>
<p>Spoiler alert&hellip; <a href="https://www.masoopy.com/all-your-devices-are-belong-to-ubiquity/" target="_blank" rel="noopener noreffer ">I no longer use Unifi hardware</a>, and I&rsquo;ll share why in a future post.</p>
<h3 id="system-overview">System Overview</h3>
<p>I have 2 servers :</p>
<ul>
<li>local server at home, which runs the Unifi controller in a Docker swarm setup ;</li>
<li>remote server online, which runs the NGiNX reverse proxy.</li>
</ul>
<p>The local server uses firewall rules (via PFSense) in order to filter incoming requests, so that it only accepts request from the remote server.</p>
<h3 id="home-server">Home server</h3>
<p>As explained above, my local server runs the Unifi server in Docker swarm &ldquo;mode&rdquo;, here is the config :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">version: &#39;3&#39;

services:
  unifi:
    image: linuxserver/unifi
    deploy:
     replicas: 1
    hostname: unifi.domain.com
    ports:
      - &#34;3478:3478/udp&#34;
      - &#34;10001:10001/udp&#34;
      - &#34;8080:8080&#34;
      - &#34;8081:8081&#34;
      - &#34;8443:8443&#34;
      - &#34;8843:8843&#34;
      - &#34;8880:8880&#34;
      - &#34;6789:6789&#34;
    environment:
      - PUID=1000 
      - PGID=1000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config:/config
    networks:
     default:
         aliases:
          - unifi
</code></pre></td></tr></table>
</div>
</div><p>As you can see, I expose quite a lot of ports, however they are almost all available only from my local network.</p>
<p>The only exception being the port 8443 that is open to my remote server (via PFSense firewall).</p>
<p>For more information about the Docker image, please check <a href="https://hub.docker.com/r/linuxserver/unifi/" target="_blank" rel="noopener noreffer ">their official page</a>.</p>
<h3 id="remote-server">Remote server</h3>
<p>For the nginx part, I do not use the <a href="https://hub.docker.com/r/jwilder/nginx-proxy/" target="_blank" rel="noopener noreffer ">jwilder version</a>, because as far as I know, it requires ports to be exposed.</p>
<p>I&rsquo;ll start by showing my container config. This is a docker-compose.yml file :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">version: &#39;2&#39;

services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - &#34;443:443&#34;
      - &#34;80:80&#34;
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/nginx/ssl
      - /srv/data/ssl/dhparam.pem:/etc/nginx/cert/dhparam.pem
    restart: unless-stopped
    networks:
      default:
        aliases:
          - nginx

networks:
  default:
    external:
      name: br0
</code></pre></td></tr></table>
</div>
</div><p>Let&rsquo;s explain a little bit what it does :</p>
<ul>
<li>I only expose ports 80 and 443 ;</li>
<li><a href="https://hub.docker.com/_/nginx/" target="_blank" rel="noopener noreffer ">The nginx (official)</a> image mounts volumes /etc/letsencrypt directory + <a href="https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html" target="_blank" rel="noopener noreffer ">DH param</a> file from host as well, into my container and the conf.d directory (which holds my virtual hosts) ;</li>
<li>I create network aliases and separate networks for my &ldquo;group of apps&rdquo;.</li>
</ul>
<p>The network thing is very important. Remember, when I told you that I do not want to expose too many ports. Creating separate networks allow me to do so.</p>
<p>I have all my &ldquo;web&rdquo; apps, on the same network (br0, on this example). Which means, the reverse proxy can reach any other container by using its alias (even when containers&rsquo;s IP change). This is kind of Docker&rsquo;s internal DNS system.</p>
<p>I see two main benefits by not exposing the ports when my &ldquo;backend&rdquo; containers and my reverse proxy containers are running both on the same host  :</p>
<ol>
<li>I can use the same &ldquo;internal&rdquo; ports on all my backend containers (often 80 or 443);</li>
<li>I only expose 80 and 443 from my remote server to the rest of the world!</li>
</ol>
<h3 id="setting-up-nginx-virtual-host">Setting up nginx virtual host</h3>
<p>Now, that I have shared the reverse proxy container, let&rsquo;s see how it is connecting to my local computer.</p>
<p>This is a nginx vhost config which resides in ./conf.d (symlinked from ./conf.d/vhost) :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">server {
       listen 80;
       server_name unifi.domain.com;
       return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/live/domain.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/domain.com/privkey.pem;

    ssl_dhparam /etc/nginx/cert/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;

    add_header Strict-Transport-Security &#34;max-age=31536000; includeSubDomains&#34; always;

    server_name unifi.domain.com;
    access_log on;
    location / {
        proxy_pass https://domain.com:8443;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-for $remote_addr;
        port_in_redirect off;
        proxy_connect_timeout 300;
    }
}
</code></pre></td></tr></table>
</div>
</div><p>As you can see, the proxy pass directive uses: <a href="https://domain.com">https://domain.com</a>:8443. Like I explained previously, domain.com points to my home server and port 8443 is only open from my remote server.</p>
<p>If the Unifi controller were running on the same host, then the proxy pass would point to the the network alias of that container without exposing any port. It would look something like below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">&amp;nbsp; &amp;nbsp;proxy_pass https://unifi:8443;
</code></pre></td></tr></table>
</div>
</div><p>Finally, unifi.domain.com points to my remote server and force redirects to the httpS URL, using wildcard certs from Let&rsquo;s Encrypt.</p>
<h3 id="getting-it-all-https">Getting it all httpS!</h3>
<p>I generated my wildard certificate thanks to <a href="https://hub.docker.com/r/certbot/dns-cloudflare/" target="_blank" rel="noopener noreffer ">Let&rsquo;s Encrypt Docker image</a>.</p>
<p>Finally SSL certs are automagically renewed via a systemd &ldquo;job&rdquo; than runs the official letsencrypt container and renew my cert (wildcard), like below :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">docker run -v /etc/letsencrypt/:/etc/letsencrypt/ certbot/dns-cloudflare renew --dns-cloudflare --email my@email.com --agree-tos --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Nesatmo : beautiful graphs for Netatmo</title><link>https://www.masoopy.com/nesatmo-beautiful-graphs-for-netatmo/</link><pubDate>Tue, 27 Mar 2018 09:32:28 +0200</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/nesatmo-beautiful-graphs-for-netatmo/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/netatmo.png" referrerpolicy="no-referrer">
            </div><p>Netatmo are little, funny, useless devices that monitor &ldquo;stuff&rdquo; in your home.</p>
<h3 id="netatmo-weather">Netatmo weather</h3>
<p>On the weather side, you can buy an indoor / outdoor station :</p>
<iframe style="width: 120px; height: 240px;" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=US&amp;source=ac&amp;ref=qf_sp_asin_til&amp;ad_type=product_link&amp;tracking_id=kodi-xbmc-20&amp;marketplace=amazon&amp;region=US&amp;placement=B0095HVAKS&amp;asins=B0095HVAKS&amp;linkId=a9a64629f351d03cf319db92e732ec92&amp;show_border=false&amp;link_opens_in_new_window=false&amp;price_color=333333&amp;title_color=0066c0&amp;bg_color=ffffff" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"><br>
</iframe>
<p>The indoor station is connected to your WiFi connection for the &ldquo;data&rdquo; part and to a power line for&hellip; power!</p>
<p>The outdoor station, runs on batteries and is wirelessly connected to the indoor (aka, base) station. Batteries should last several months.</p>
<p>Usually, I am not much into proprietary solution but I have to admit that this solution is pretty convenient. In my opinion it is way better (on the hardware / convenience part) than something based on RPI / Arduino.</p>
<p>However, the website looks really bad and the graphs suck, see :</p>
<p></p>
<p>This is why I&rsquo;ll show you how to get beautiful graphs.</p>
<h3 id="here-comes-the-open-source">Here comes the open source</h3>
<p>Thanks to Docker, the Internet and the help of a friend, I hacked together a pretty cool interface to store and visualize your data. It&rsquo;s called Nesatmo and runs under Docker / Grafana / Telegraf and InfluxDB.</p>
<p>I&rsquo;ll assume you already have a Docker / Grafana / InfluxDB setup.</p>
<p>In order to make it work, all you need to do is to pull the following Docker image, like this :</p>
<p><code>docker pull nesousx/nesatmo</code></p>
<p>Then create a docker-compose.yml file and edit it according to your config :</p>
<script src="https://gist.github.com/Nesousx/fc6967ce7e3ff88e757a6152fd079bbf.js"></script>
<p>You can now create your own Grafana dashboard that could look like this :</p>
<p></p>
<p>If you want to get mine, <a href="https://gist.github.com/Nesousx/3941d33ee6c2282c29fa70e69c54fb1f" target="_blank" rel="noopener noreffer ">here it is</a>.</p>
<p>Search and replace the following elements :</p>
<ul>
<li>&ldquo;nesoweath&rdquo; by your station&rsquo;s name ;</li>
<li>&ldquo;indoor&rdquo; by your indoor&rsquo;s sensor&rsquo;s name ;</li>
<li>&ldquo;outdoor&rdquo; by your outdoor&rsquo;s sensor&rsquo;s name.</li>
</ul>
<p>I hope this quick guide will help you to get started. Do not hesitate to post a comment if you need additional help, you can also check my <a href="https://hub.docker.com/r/nesousx/nesatmo/" target="_blank" rel="noopener noreffer ">official Docker page</a>.</p>
]]></description></item><item><title>Scan to PDF with command line under GNU/Linux</title><link>https://www.masoopy.com/scan-to-pdf-with-command-line-under-gnu/linux/</link><pubDate>Mon, 05 Feb 2018 12:01:12 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/scan-to-pdf-with-command-line-under-gnu/linux/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/scan_pdf_cli.png" referrerpolicy="no-referrer">
            </div><p>After years of not-so-good services, I deciced to replace my old Canon MG5550 printer/scanner combo. Instead, I bought a simple black and white laser printer/scanner, and I have never been so happy with a &ldquo;printer&rdquo;.</p>
<h2 id="more-info-about-the-printer">More info about the printer</h2>
<p>Recently, I needed to go through quite some paperwork and I knew it would be a hassle (and pricey) do it with my actual hardware. Moreover, I was never happy with it: it was not reliable under Linux, there was no auto document feeder, etc.</p>
<p>So, I was looking for a new tool with the following requirements:</p>
<ul>
<li>Linux support ;</li>
<li>Auto document feeder ;</li>
<li>Networked ;</li>
<li>Laser (for reduced cost of use) ;</li>
<li>Color not required.</li>
</ul>
<p>After a few searchs, I came across this model :</p>
<iframe style="width: 120px; height: 240px;" src="//ws-eu.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;OneJS=1&amp;Operation=GetAdHtml&amp;MarketPlace=FR&amp;source=ss&amp;ref=as_ss_li_til&amp;ad_type=product_link&amp;tracking_id=streamgen-21&amp;marketplace=amazon&amp;region=FR&amp;placement=B00MFG58N6&amp;asins=B00MFG58N6&amp;linkId=a9da148dc72c165cc9077005972d268d&amp;show_border=false&amp;link_opens_in_new_window=true" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>
<p>It matches all my requirements, moreover it is just a little bigger than my previous printer which is a good point. I didn&rsquo;t want a huge piece of plastic sitting on my desk.</p>
<p>Installing it under Linux / Macos and Windows was pretty straighforward. However, the only thing I did struggle with a bit was to find a good Linux program to scan document to PDF (I didn&rsquo;t want to use Gimp and convert file manually to PDF).</p>
<h2 id="scan-document-to-pdf-with-linux">Scan document to PDF with Linux</h2>
<p>This is why I wrote a simple script (inspired from various pieces found on Internet).</p>
<p>What the script does :</p>
<ul>
<li>scan one or several pages from the automatic document feeder and merge them into a single PDF file (optimized in size).</li>
</ul>
<h3 id="requirements">Requirements</h3>
<ul>
<li>scanimage tool (part of sane backends and/or tools package) ;</li>
<li>libtiff-tools (or something similar in name) ;</li>
<li>imagemagick ;</li>
<li>ghoscript.</li>
</ul>
<h3 id="the-script">The script</h3>
<script src="https://gist.github.com/anonymous/e28fa1754502eae9240def351a83e6e4.js"></script>
<p><strong>NB</strong> : You&rsquo;ll probably have to change the &ldquo;device&rdquo; part (-d flag) of the the scanimage command, in order to match your real device.</p>
<h3 id="usage">Usage</h3>
<p>The script has be used has follow :<br>
<code>scan2pdf.sh path/to/save/your_file.pdf</code></p>
<h3 id="tips">Tips</h3>
<p>In order to make things lazier, I am using an alias in my <a href="https://en.wikipedia.org/wiki/Z_shell" target="_blank" rel="noopener noreffer ">ZSH</a> config:</p>
<p>Add the following line, to your .zshrc:</p>
<p><code>alias scan2pdf=&quot;bash ~/path/to/scripts/scan2pdf.sh&quot;</code></p>
<p><strong>NB</strong> : in case your are using bash, add the above line to yout .bashrc file, and source the .bashrc file.</p>
<p>Which now, means I can scan a document like this, from anywhere:</p>
<p><code>scan2pdf path/to/save/your_file.pdf</code></p>
<p>That&rsquo;s it!</p>
<p>Please bear in my mind that the script is pretty simple and stupid. It works very well for me, but it can be easily tweaked to your needs. If you do so, do not hesitate to share it with us.</p>
]]></description></item><item><title>Sending text messages from your computer</title><link>https://www.masoopy.com/sending-text-messages-from-your-computer/</link><pubDate>Thu, 21 Sep 2017 11:12:57 +0200</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/sending-text-messages-from-your-computer/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/send_text_from_pc.png" referrerpolicy="no-referrer">
            </div><p>Do you hate touchscreen? I sure do! More than touchscreen, I hate when I have to write something using a touch screen. This is why, I have been trying and using different solutions that allows me to send text messages from my computer with a real (mechanical) keyboard!</p>
<h2 id="foreword">Foreword</h2>
<p>Please note that this guide is based on Android phones and is desktop &ldquo;OS&rdquo; agnostic.</p>
<p>If you are using Apple phones and computers, then <a href="https://support.apple.com/en-us/HT202549" target="_blank" rel="noopener noreffer ">have a look here</a>.</p>
<p>Under Windows Phone, check what <a href="https://pureinfotech.com/how-send-sms-texts-using-cortana-windows-10-pc/" target="_blank" rel="noopener noreffer ">Cortana can do for you</a>.</p>
<p>However, some apps I am talking about are also probably working on Apple and/or Windows phones. Be sure to check your app store!</p>
<h2 id="mightytext">MightyText</h2>
<p><a href="https://mightytext.net/install" target="_blank" rel="noopener noreffer ">MightyText</a> is a free app that can be downloaded via the Play Store. The setup is straightforward: it will &ldquo;only&rdquo; ask you to give access to your Google account from the phone, and the same thing on your computer. So that both your devices all linked together thanks to this common account.</p>
<p>On your computer, MightyText can be accessed from various ways :</p>
<ul>
<li>From a webpage : meaning it will run on any computer that can run a web browser ;</li>
<li>There is also a desktop client for Macos and Windows, but not for Linux ;</li>
<li>You can also use an extension for the Chrome browser, but not from Firefox.</li>
</ul>
<p>Now, in my opinion it is best to have the MightyText app always running on your desktop, so that you don&rsquo;t miss any text / notification and can reply asap. Which means, depending on your OS and browser of choice, you might have limited options. Let&rsquo;s say for example, you are running Linux and using Firefox, then your only choice will be to leave a Firefox tab always open&hellip; This might not be a problem for most people, but I personally hate to have too many tabs open&hellip; This, and only this, is a no go for me.</p>
<p>As you might have noticed, I also talked about receiving notifications on your computer. Indeed, with this kind of apps, you can also do that. Again, it can be very useful if like me you are only using webmail and don&rsquo;t want to leave an extra tab and/or app open in the background to receive new email notifications.</p>
<p>Thanks to MightyText, you&rsquo;ll receive a destop notification when you receive an email on your phone, then you just have to browse to your webmail, and take action.</p>
<p>Supposedly, you are able to filter which apps from your phone are allowed to send notifications all the way up to your desktop. However I couldn&rsquo;t find how to do that, and it means a lot of spam on my desktop. Especially when I was using Telegram on the desktop to chat, I was receiving notifications from both the Desktop client and the mobile client through the MightText app! Another no go&hellip;</p>
<p>EDIT 22/09/2017: Thanks to their support on Twitter, this is how we filter apps notifications:<br>
Yes, you can customize this by visiting the MightyText web app &ndash; Phone tab &ndash; Apps section. Let us know if that works for you.</p>
<p>This led me to check another well known player: Pushbullet.</p>
<h2 id="pushbullet">Pushbullet</h2>
<p><a href="https://www.pushbullet.com/" target="_blank" rel="noopener noreffer ">Pushbullet</a> configuration works almost the same way than MightyText does. You need to give access to your Google account to all devices that you want to be linked together. However, it supports both Google and Facebook accounts, while MightyText only supports Google accounts.</p>
<p>Once again, when the app is installed on your mobile phone, you can access it from your desktop as follows:</p>
<ul>
<li>From a webpage : meaning it will run on any computer that can run a web browser ;</li>
<li>There is also a desktop client for Windows.. and just Windows ;</li>
<li>You can also use an extension for the main browsers: Chrome, Firefox, Opera, Safari.</li>
</ul>
<p>In my opinion, this is much better than the other app mentioned before as it gives you a lot more possibilities. Like I said before, thanks to the browser extensions, you now have the app running and listening to incoming messages and notifications all the time your browser is open and without having to waste a tab. It is even foolproof, you won&rsquo;t forget to open the tab!</p>
<p>Here again, we can choose to filter notifications, and this time, I found it pretty straightforward to set it up. Which means no spamming on my desktop, and only receiving the desired notifications. I&rsquo;ll get notifications for emails, appointments and of course text messages, which of course I can reply to with my keyboard.</p>
<h2 id="but-what-about-sending-messages">But what about sending messages?</h2>
<p>This is the main usage for these two apps, and it works well&hellip; most of the time!</p>
<p>About 95% of the time, it &ldquo;just works&rdquo;. You receive a desktop notification about a new text. Just click on it, it will open the message and you can directly reply to it. Contact names appears the same way they would on your phone. If you want to create a new message, just select your contact&rsquo;s name inside the browser extension (for example) to write your text. Send, it! Done.</p>
<p>Then, 5% of the time&hellip; the message will stay &ldquo;stuck&rdquo; on your computer and won&rsquo;t be relayed to you phone, hence they won&rsquo;t be sent. At the time of writing, it only happened to me when I killed the app on phone (beware with the &ldquo;kill all&rdquo; function of Android phones). In those case, I just started the app again on the phone, and it fixed it.<br>
There could also be issues with battery management where the phone puts the app to sleep in order to reduce battery usage. If you have issues about not being able to send SMS after some time, then <a href="http://www.techrepublic.com/article/how-to-remove-android-apps-from-the-battery-optimization-list/" target="_blank" rel="noopener noreffer ">make sure that Android no longer optimize the battery</a> for this app.</p>
<p>Last but not least, all the messages sent / received from the computer will continue to appear in your default messages app, just like if you sent them from the phone.</p>
<h2 id="closing-words-and-a-few-other-alternatives">Closing words and a few other alternatives</h2>
<p>As we have seen those apps can be very handy, especially if you hate using touchscreen. It is also a good way to synchronize your phone and computer and remove extra app on the desktop, close a few browser tabs, etc.</p>
<p>In my opinion, the fact that Pushbullet offers browser extensions for all the major browsers is a great plus! Moreover, I feel it easier to navigate in the app, find what you are looking for, and tweak it (ie. the notification thingy). In a few words, we could say that Pushbullet is more basic, maybe even less &ldquo;bloated&rdquo;. Like I didn&rsquo;t see any ads in Pushbullet, while I see some using MightyText webpage.</p>
<p>Now, if you want to follow that road but feel to restricted by those 2 apps, you can also have a look a few other alternatives such as <a href="https://joaoapps.com/join-sms-from-anything-with-a-browser/" target="_blank" rel="noopener noreffer ">Join</a> or <a href="https://play.google.com/store/apps/details?id=xyz.klinker.messenger&amp;hl=en" target="_blank" rel="noopener noreffer ">Pulse</a>. They look like pretty strong competitors as well.</p>
<p>I hope you enjoyed this article and that it might have helped you. Better yet, given you faith again in your texting business!</p>
<p>Do not hesitate to let me know if you use any other similar app, most especially if you love it.</p>
]]></description></item><item><title>How to set up correct Freenas jail permissions</title><link>https://www.masoopy.com/how-to-set-up-correct-freenas-jail-permissions/</link><pubDate>Sun, 30 Jul 2017 12:14:03 +0200</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/how-to-set-up-correct-freenas-jail-permissions/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/freenas.png" referrerpolicy="no-referrer">
            </div><p><a href="http://www.freenas.org/" target="_blank" rel="noopener noreffer ">Freenas</a> is a great software, allowing you to turn a PC into a NAS. Is it totally free and open source, which we really like.</p>
<h2 id="freenas-overview">Freenas overview</h2>
<p>Like any “market” NAS, Freenas allows you to install third party software such as bitorrent client, or newsgroups client. One of my favorite tools for downloading media (once again, make sure this is legal where you live) is actually a suite of tools based on newsgroups. The are called:</p>
<ul>
<li>sabnzbd : it will manage download of items, restart the download, if it fails, etc. We will call it the downloader, like <a href="https://www.masoopy.com/nzbget-as-a-replacement-of-sabnzbdplus/" target="_blank" rel="noopener noreffer ">nzbget</a>.</li>
<li>couchpotato: tell him which movie you want, and it will automatically look for it and send it to the “downloader” as soon as the movie becomes available.</li>
<li>sonarr : just like couchpotato, but for TV Shows.</li>
</ul>
<p>NB : I’ll try to write a more elaborate guide about those great pieces of software.</p>
<h2 id="freenas-jail-permissions">Freenas jail permissions</h2>
<p>First of all, <a href="https://forums.freenas.org/index.php?threads/how-to-giving-plugins-write-permissions-to-your-data.27273/" target="_blank" rel="noopener noreffer ">thanks to this guide</a> for the starting base. Now, let’s me show you my twist.</p>
<p>Let’s assume you have one (or several jails) for the software mentioned above. It is a pain in the *** so set up Freenas jail permissions correctly, but I’ll help.</p>
<p>First of all, ssh to your Freenas server and enter the desired jail with the following commands:</p>
<p><code>jls sudo jexec X</code></p>
<p>where X is the jail’s number.</p>
<p>From here, check the media user uid and gid by issuing:</p>
<p><code>grep media /etc/passwd</code></p>
<p>Now you should create a media group and user from the Freenas web admin (make sure the uid / gid of this user matches the one from the jail. It should be both 816 for gid and uid. See screenshot below:</p>
<p></p>
<p>Now, back in the jail, we will replace the regular user of a said service with the media user.</p>
<p>For example, if we want to make sure that couchpotato runs with the media user, we will do the following:</p>
<p><code>service couchpotato onestop</code><br>
<code>sysrc 'couchpotato_user=media'</code></p>
<p>Then, we have to change ownership of all the files that belong to the previous coucpotato user to the new media one.</p>
<p>In order to locate all those files, issue:</p>
<p><code>find / -user couchpotato</code></p>
<p><code>chown -R media:media /folder/name</code></p>
<p>When you think, you are done, just do a last “find” like shown before to make sure there is nothing left. Then you can start the service again</p>
<p><code>service couchpotato start</code></p>
<p>Rinse and repeat for all the desired services / jail.</p>
<p>NB : in case, the media user doesn’t exists in the jail, just create it.</p>
<p>Last but not least, add storage to you jail. This storage must be the wanted folder for example that contains all your media and it must be owned by media:media with 775 permissions.</p>
<h2 id="fine-tuning">Fine tuning</h2>
<p>Now, if you want to fine tune this, I highly advise you to add you own user to the media group from the Freenas GUI. Also make sure to have adequate permissions for groups. Something like 775 works fine and is not too insecure.</p>
<p>This way, you’ll still be able to browse and modify your files with your regular user.</p>
<p>I hope this quick &amp; dirty guide will help you to fix Freenas jail permissions. This is quite and advanced guide, and I took many shortcut to describe the step I used to configure my server. Do not hesitate to post a comment if you need extra details.</p>
]]></description></item><item><title>NZBGet as a replacement of Sabnzbdplus</title><link>https://www.masoopy.com/nzbget-as-a-replacement-of-sabnzbdplus/</link><pubDate>Mon, 11 Aug 2014 12:55:43 +0200</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/nzbget-as-a-replacement-of-sabnzbdplus/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/nzbget.png" referrerpolicy="no-referrer">
            </div><p>After years of Sabnzbdplus’s reign, a new tool doing for the same purpose was born: <a href="http://nzbget.net/" target="_blank" rel="noopener noreffer ">NZBGet</a>. In a few words, NZBGet has a lighter footprint on your system. It is coded in C++ whereas Sab is coded in Python. This means that NZBGet will run better on smaller system (such as NAS).</p>
<p>Configuring NZBGet can be pretty tricky for the first time, especially if you want to combine it with Couchpotato and Sickbeard and leave to them the post processing / renaming. I’ll write a little guide about this.</p>
<p>Of course, NZBGet (thanks to user made post-processing scripts) can <a href="http://nzbget.net/forum/viewtopic.php?f=3&amp;t=777" target="_blank" rel="noopener noreffer ">notify</a> your media center <a href="https://www.masoopy.com/tag/kodi/" target="_blank" rel="noopener noreffer ">#Kodi</a>.</p>
]]></description></item></channel></rss>